ARM GAS  /tmp/ccnIlCuV.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_ll_rtc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LL_RTC_StructInit,"ax",%progbits
  16              		.align	1
  17              		.global	LL_RTC_StructInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	LL_RTC_StructInit:
  24              	.LFB260:
  25              		.file 1 "./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c"
   1:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
   2:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ******************************************************************************
   3:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @file    stm32l0xx_ll_rtc.c
   4:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @author  MCD Application Team
   5:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief   RTC LL module driver.
   6:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ******************************************************************************
   7:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @attention
   8:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *
   9:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *
  11:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  12:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * are permitted provided that the following conditions are met:
  13:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *      this list of conditions and the following disclaimer.
  15:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
  17:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *      and/or other materials provided with the distribution.
  18:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *      may be used to endorse or promote products derived from this software
  20:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *      without specific prior written permission.
  21:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *
  22:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *
  33:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ******************************************************************************
ARM GAS  /tmp/ccnIlCuV.s 			page 2


  34:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
  35:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #if defined(USE_FULL_LL_DRIVER)
  36:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  37:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Includes ------------------------------------------------------------------*/
  38:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #include "stm32l0xx_ll_rtc.h"
  39:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #include "stm32l0xx_ll_cortex.h"
  40:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #ifdef  USE_FULL_ASSERT
  41:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #include "stm32_assert.h"
  42:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #else
  43:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define assert_param(expr) ((void)0U)
  44:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #endif
  45:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  46:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /** @addtogroup STM32L0xx_LL_Driver
  47:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @{
  48:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
  49:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  50:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #if defined(RTC)
  51:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  52:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /** @addtogroup RTC_LL
  53:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @{
  54:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
  55:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  56:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Private types -------------------------------------------------------------*/
  57:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Private variables ---------------------------------------------------------*/
  58:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Private constants ---------------------------------------------------------*/
  59:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /** @addtogroup RTC_LL_Private_Constants
  60:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @{
  61:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
  62:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Default values used for prescaler */
  63:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define RTC_ASYNCH_PRESC_DEFAULT     ((uint32_t) 0x0000007FU)
  64:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define RTC_SYNCH_PRESC_DEFAULT      ((uint32_t) 0x000000FFU)
  65:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  66:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Values used for timeout */
  67:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define RTC_INITMODE_TIMEOUT         ((uint32_t) 1000U) /* 1s when tick set to 1ms */
  68:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define RTC_SYNCHRO_TIMEOUT          ((uint32_t) 1000U) /* 1s when tick set to 1ms */
  69:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
  70:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @}
  71:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
  72:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  73:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Private macros ------------------------------------------------------------*/
  74:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /** @addtogroup RTC_LL_Private_Macros
  75:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @{
  76:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
  77:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  78:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_HOURFORMAT(__VALUE__) (((__VALUE__) == LL_RTC_HOURFORMAT_24HOUR) \
  79:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                       || ((__VALUE__) == LL_RTC_HOURFORMAT_AMPM))
  80:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  81:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_ASYNCH_PREDIV(__VALUE__)   ((__VALUE__) <= (uint32_t)0x7FU)
  82:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  83:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_SYNCH_PREDIV(__VALUE__)    ((__VALUE__) <= (uint32_t)0x7FFFU)
  84:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  85:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_FORMAT(__VALUE__) (((__VALUE__) == LL_RTC_FORMAT_BIN) \
  86:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                   || ((__VALUE__) == LL_RTC_FORMAT_BCD))
  87:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  88:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_TIME_FORMAT(__VALUE__) (((__VALUE__) == LL_RTC_TIME_FORMAT_AM_OR_24) \
  89:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                        || ((__VALUE__) == LL_RTC_TIME_FORMAT_PM))
  90:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
ARM GAS  /tmp/ccnIlCuV.s 			page 3


  91:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_HOUR12(__HOUR__)            (((__HOUR__) > 0U) && ((__HOUR__) <= 12U))
  92:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_HOUR24(__HOUR__)            ((__HOUR__) <= 23U)
  93:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_MINUTES(__MINUTES__)        ((__MINUTES__) <= 59U)
  94:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_SECONDS(__SECONDS__)        ((__SECONDS__) <= 59U)
  95:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
  96:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_WEEKDAY(__VALUE__) (((__VALUE__) == LL_RTC_WEEKDAY_MONDAY) \
  97:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_TUESDAY) \
  98:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_WEDNESDAY) \
  99:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_THURSDAY) \
 100:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_FRIDAY) \
 101:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_SATURDAY) \
 102:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_SUNDAY))
 103:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 104:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_DAY(__DAY__)    (((__DAY__) >= (uint32_t)1U) && ((__DAY__) <= (uint32_t)31U))
 105:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 106:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_MONTH(__VALUE__) (((__VALUE__) == LL_RTC_MONTH_JANUARY) \
 107:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_FEBRUARY) \
 108:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_MARCH) \
 109:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_APRIL) \
 110:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_MAY) \
 111:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_JUNE) \
 112:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_JULY) \
 113:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_AUGUST) \
 114:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_SEPTEMBER) \
 115:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_OCTOBER) \
 116:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_NOVEMBER) \
 117:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_DECEMBER))
 118:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 119:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_YEAR(__YEAR__) ((__YEAR__) <= 99U)
 120:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 121:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_ALMA_MASK(__VALUE__) (((__VALUE__) == LL_RTC_ALMA_MASK_NONE) \
 122:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_DATEWEEKDAY) \
 123:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_HOURS) \
 124:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_MINUTES) \
 125:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_SECONDS) \
 126:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_ALL))
 127:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 128:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_ALMB_MASK(__VALUE__) (((__VALUE__) == LL_RTC_ALMB_MASK_NONE) \
 129:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_DATEWEEKDAY) \
 130:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_HOURS) \
 131:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_MINUTES) \
 132:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_SECONDS) \
 133:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_ALL))
 134:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 135:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 136:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_ALMA_DATE_WEEKDAY_SEL(__SEL__) (((__SEL__) == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE) ||
 137:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                                   ((__SEL__) == LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY)
 138:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 139:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #define IS_LL_RTC_ALMB_DATE_WEEKDAY_SEL(__SEL__) (((__SEL__) == LL_RTC_ALMB_DATEWEEKDAYSEL_DATE) ||
 140:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                                                   ((__SEL__) == LL_RTC_ALMB_DATEWEEKDAYSEL_WEEKDAY)
 141:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 142:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 143:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 144:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @}
 145:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 146:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 147:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /* Exported functions --------------------------------------------------------*/
ARM GAS  /tmp/ccnIlCuV.s 			page 4


 148:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /** @addtogroup RTC_LL_Exported_Functions
 149:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @{
 150:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 151:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 152:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /** @addtogroup RTC_LL_EF_Init
 153:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @{
 154:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 155:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 156:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 157:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  De-Initializes the RTC registers to their default reset values.
 158:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   This function doesn't reset the RTC Clock source and RTC Backup Data
 159:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         registers.
 160:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 161:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 162:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are de-initialized
 163:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: RTC registers are not de-initialized
 164:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 165:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_DeInit(RTC_TypeDef *RTCx)
 166:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 167:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 168:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 169:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameter */
 170:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 171:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 172:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 173:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 174:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 175:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Set Initialization mode */
 176:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 177:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 178:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Reset TR, DR and CR registers */
 179:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, TR,       0x00000000U);
 180:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #if defined(RTC_WAKEUP_SUPPORT)
 181:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, WUTR,     RTC_WUTR_WUT);
 182:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #endif /* RTC_WAKEUP_SUPPORT */
 183:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, DR  ,     (RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 184:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 185:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #if defined(RTC_WAKEUP_SUPPORT)
 186:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CR, (LL_RTC_ReadReg(RTCx, CR) & RTC_CR_WUCKSEL));
 187:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #else
 188:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CR, 0x00000000U);
 189:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #endif /* RTC_WAKEUP_SUPPORT */
 190:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, PRER,     (RTC_PRER_PREDIV_A | RTC_SYNCH_PRESC_DEFAULT));
 191:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMAR,   0x00000000U);
 192:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMBR,   0x00000000U);
 193:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, SHIFTR,   0x00000000U);
 194:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CALR,     0x00000000U);
 195:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMASSR, 0x00000000U);
 196:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMBSSR, 0x00000000U);
 197:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 198:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Reset ISR register and exit initialization mode */
 199:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ISR,      0x00000000U);
 200:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 201:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Reset Tamper and alternate functions configuration register */
 202:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, TAMPCR, 0x00000000U);
 203:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 204:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Reset Option register */
ARM GAS  /tmp/ccnIlCuV.s 			page 5


 205:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, OR, 0x00000000U);
 206:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 207:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Wait till the RTC RSF flag is set */
 208:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     status = LL_RTC_WaitForSynchro(RTCx);
 209:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 210:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 211:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 212:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 213:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 214:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return status;
 215:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 216:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 217:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 218:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Initializes the RTC registers according to the specified parameters
 219:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         in RTC_InitStruct.
 220:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 221:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_InitStruct pointer to a @ref LL_RTC_InitTypeDef structure that contains
 222:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         the configuration information for the RTC peripheral.
 223:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   The RTC Prescaler register is write protected and can be written in
 224:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         initialization mode only.
 225:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 226:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are initialized
 227:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: RTC registers are not initialized
 228:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 229:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_Init(RTC_TypeDef *RTCx, LL_RTC_InitTypeDef *RTC_InitStruct)
 230:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 231:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 232:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 233:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameters */
 234:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 235:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_HOURFORMAT(RTC_InitStruct->HourFormat));
 236:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ASYNCH_PREDIV(RTC_InitStruct->AsynchPrescaler));
 237:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_SYNCH_PREDIV(RTC_InitStruct->SynchPrescaler));
 238:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 239:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 240:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 241:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 242:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Set Initialization mode */
 243:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 244:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 245:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Set Hour Format */
 246:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_SetHourFormat(RTCx, RTC_InitStruct->HourFormat);
 247:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 248:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Configure Synchronous and Asynchronous prescaler factor */
 249:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_SetSynchPrescaler(RTCx, RTC_InitStruct->SynchPrescaler);
 250:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_SetAsynchPrescaler(RTCx, RTC_InitStruct->AsynchPrescaler);
 251:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 252:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Exit Initialization mode */
 253:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTCx);
 254:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 255:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     status = SUCCESS;
 256:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 257:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 258:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 259:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 260:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return status;
 261:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
ARM GAS  /tmp/ccnIlCuV.s 			page 6


 262:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 263:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 264:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_InitTypeDef field to default value.
 265:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_InitStruct pointer to a @ref LL_RTC_InitTypeDef structure which will be initialized
 266:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval None
 267:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 268:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** void LL_RTC_StructInit(LL_RTC_InitTypeDef *RTC_InitStruct)
 269:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
  26              		.loc 1 269 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 270:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Set RTC_InitStruct fields to default values */
 271:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_InitStruct->HourFormat      = LL_RTC_HOURFORMAT_24HOUR;
  32              		.loc 1 271 0
  33 0000 0023     		movs	r3, #0
  34 0002 0360     		str	r3, [r0]
 272:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_InitStruct->AsynchPrescaler = RTC_ASYNCH_PRESC_DEFAULT;
  35              		.loc 1 272 0
  36 0004 7F33     		adds	r3, r3, #127
  37 0006 4360     		str	r3, [r0, #4]
 273:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_InitStruct->SynchPrescaler  = RTC_SYNCH_PRESC_DEFAULT;
  38              		.loc 1 273 0
  39 0008 8033     		adds	r3, r3, #128
  40 000a 8360     		str	r3, [r0, #8]
 274:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
  41              		.loc 1 274 0
  42              		@ sp needed
  43 000c 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE260:
  47              		.section	.text.LL_RTC_TIME_StructInit,"ax",%progbits
  48              		.align	1
  49              		.global	LL_RTC_TIME_StructInit
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  53              		.fpu softvfp
  55              	LL_RTC_TIME_StructInit:
  56              	.LFB262:
 275:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 276:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 277:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set the RTC current time.
 278:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 279:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 280:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 281:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 282:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_TimeStruct pointer to a RTC_TimeTypeDef structure that contains
 283:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *                        the time configuration information for the RTC.
 284:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 285:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: RTC Time register is configured
 286:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: RTC Time register is not configured
 287:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 288:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_TIME_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_TimeTypeDef *RTC_TimeSt
 289:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
ARM GAS  /tmp/ccnIlCuV.s 			page 7


 290:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 291:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 292:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameters */
 293:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 294:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 295:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 296:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 297:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 298:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 299:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 300:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(RTC_TimeStruct->Hours));
 301:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_TimeStruct->TimeFormat));
 302:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 303:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 304:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 305:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       RTC_TimeStruct->TimeFormat = 0x00U;
 306:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_TimeStruct->Hours));
 307:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 308:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(RTC_TimeStruct->Minutes));
 309:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(RTC_TimeStruct->Seconds));
 310:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 311:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   else
 312:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 313:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 314:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 315:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 316:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_TimeStruct->TimeFormat));
 317:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 318:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 319:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 320:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       RTC_TimeStruct->TimeFormat = 0x00U;
 321:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 322:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 323:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Minutes)));
 324:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Seconds)));
 325:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 326:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 327:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 328:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 329:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 330:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Set Initialization mode */
 331:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 332:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 333:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Check the input parameters format */
 334:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 335:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 336:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       LL_RTC_TIME_Config(RTCx, RTC_TimeStruct->TimeFormat, RTC_TimeStruct->Hours,
 337:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                          RTC_TimeStruct->Minutes, RTC_TimeStruct->Seconds);
 338:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 339:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 340:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 341:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       LL_RTC_TIME_Config(RTCx, RTC_TimeStruct->TimeFormat, __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct-
 342:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Minutes),
 343:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Seconds));
 344:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 345:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 346:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Exit Initialization mode */
ARM GAS  /tmp/ccnIlCuV.s 			page 8


 347:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTC);
 348:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 349:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 350:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_RTC_IsShadowRegBypassEnabled(RTCx) == 0U)
 351:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 352:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       status = LL_RTC_WaitForSynchro(RTCx);
 353:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 354:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 355:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 356:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       status = SUCCESS;
 357:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 358:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 359:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 360:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 361:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 362:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return status;
 363:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 364:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 365:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 366:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_TimeTypeDef field to default value (Time = 00h:00min:00sec).
 367:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_TimeStruct pointer to a @ref LL_RTC_TimeTypeDef structure which will be initialized
 368:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval None
 369:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 370:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** void LL_RTC_TIME_StructInit(LL_RTC_TimeTypeDef *RTC_TimeStruct)
 371:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
  57              		.loc 1 371 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62              	.LVL1:
 372:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Time = 00h:00min:00sec */
 373:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_TimeStruct->TimeFormat = LL_RTC_TIME_FORMAT_AM_OR_24;
  63              		.loc 1 373 0
  64 0000 0023     		movs	r3, #0
  65 0002 0360     		str	r3, [r0]
 374:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_TimeStruct->Hours      = 0U;
  66              		.loc 1 374 0
  67 0004 0371     		strb	r3, [r0, #4]
 375:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_TimeStruct->Minutes    = 0U;
  68              		.loc 1 375 0
  69 0006 4371     		strb	r3, [r0, #5]
 376:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_TimeStruct->Seconds    = 0U;
  70              		.loc 1 376 0
  71 0008 8371     		strb	r3, [r0, #6]
 377:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
  72              		.loc 1 377 0
  73              		@ sp needed
  74 000a 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE262:
  78              		.section	.text.LL_RTC_DATE_StructInit,"ax",%progbits
  79              		.align	1
  80              		.global	LL_RTC_DATE_StructInit
  81              		.syntax unified
  82              		.code	16
  83              		.thumb_func
ARM GAS  /tmp/ccnIlCuV.s 			page 9


  84              		.fpu softvfp
  86              	LL_RTC_DATE_StructInit:
  87              	.LFB264:
 378:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 379:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 380:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set the RTC current date.
 381:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 382:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 383:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 384:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 385:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure that contains
 386:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *                         the date configuration information for the RTC.
 387:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 388:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: RTC Day register is configured
 389:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: RTC Day register is not configured
 390:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 391:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_DATE_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_DateTypeDef *RTC_DateSt
 392:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 393:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 394:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 395:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameters */
 396:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 397:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 398:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 399:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if ((RTC_Format == LL_RTC_FORMAT_BIN) && ((RTC_DateStruct->Month & 0x10U) == 0x10U))
 400:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 401:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     RTC_DateStruct->Month = (RTC_DateStruct->Month & (uint32_t)~(0x10U)) + 0x0AU;
 402:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 403:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 404:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 405:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_YEAR(RTC_DateStruct->Year));
 406:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MONTH(RTC_DateStruct->Month));
 407:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_DAY(RTC_DateStruct->Day));
 408:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 409:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   else
 410:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 411:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_YEAR(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Year)));
 412:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MONTH(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Month)));
 413:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_DAY(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Day)));
 414:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 415:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_WEEKDAY(RTC_DateStruct->WeekDay));
 416:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 417:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 418:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 419:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 420:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Set Initialization mode */
 421:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 422:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 423:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Check the input parameters format */
 424:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 425:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 426:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       LL_RTC_DATE_Config(RTCx, RTC_DateStruct->WeekDay, RTC_DateStruct->Day, RTC_DateStruct->Month,
 427:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 428:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 429:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 430:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       LL_RTC_DATE_Config(RTCx, RTC_DateStruct->WeekDay, __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Da
 431:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Month), __LL_RTC_CONVERT_BIN2BCD(
ARM GAS  /tmp/ccnIlCuV.s 			page 10


 432:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 433:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 434:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Exit Initialization mode */
 435:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTC);
 436:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 437:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 438:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_RTC_IsShadowRegBypassEnabled(RTCx) == 0U)
 439:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 440:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       status = LL_RTC_WaitForSynchro(RTCx);
 441:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 442:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 443:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 444:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       status = SUCCESS;
 445:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 446:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 447:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 448:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 449:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 450:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return status;
 451:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 452:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 453:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 454:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_DateTypeDef field to default value (date = Monday, January 01 xx00
 455:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_DateStruct pointer to a @ref LL_RTC_DateTypeDef structure which will be initialized
 456:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval None
 457:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 458:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** void LL_RTC_DATE_StructInit(LL_RTC_DateTypeDef *RTC_DateStruct)
 459:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
  88              		.loc 1 459 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL2:
 460:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Monday, January 01 xx00 */
 461:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_DateStruct->WeekDay = LL_RTC_WEEKDAY_MONDAY;
  94              		.loc 1 461 0
  95 0000 0123     		movs	r3, #1
  96 0002 0370     		strb	r3, [r0]
 462:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_DateStruct->Day     = 1U;
  97              		.loc 1 462 0
  98 0004 8370     		strb	r3, [r0, #2]
 463:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_DateStruct->Month   = LL_RTC_MONTH_JANUARY;
  99              		.loc 1 463 0
 100 0006 4370     		strb	r3, [r0, #1]
 464:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_DateStruct->Year    = 0U;
 101              		.loc 1 464 0
 102 0008 0023     		movs	r3, #0
 103 000a C370     		strb	r3, [r0, #3]
 465:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 104              		.loc 1 465 0
 105              		@ sp needed
 106 000c 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE264:
 110              		.global	__aeabi_uidiv
 111              		.global	__aeabi_uidivmod
ARM GAS  /tmp/ccnIlCuV.s 			page 11


 112              		.section	.text.LL_RTC_ALMA_Init,"ax",%progbits
 113              		.align	1
 114              		.global	LL_RTC_ALMA_Init
 115              		.syntax unified
 116              		.code	16
 117              		.thumb_func
 118              		.fpu softvfp
 120              	LL_RTC_ALMA_Init:
 121              	.LFB265:
 466:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 467:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 468:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set the RTC Alarm A.
 469:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 470:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         is disabled (Use @ref LL_RTC_ALMA_Disable function).
 471:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 472:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 473:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 474:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 475:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure that
 476:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *                         contains the alarm configuration parameters.
 477:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 478:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: ALARMA registers are configured
 479:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: ALARMA registers are not configured
 480:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 481:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_ALMA_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_AlarmTypeDef *RTC_Alarm
 482:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 122              		.loc 1 482 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL3:
 127 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 128              	.LCFI0:
 129              		.cfi_def_cfa_offset 20
 130              		.cfi_offset 4, -20
 131              		.cfi_offset 5, -16
 132              		.cfi_offset 6, -12
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 0002 D646     		mov	lr, r10
 136 0004 4F46     		mov	r7, r9
 137 0006 4646     		mov	r6, r8
 138 0008 C0B5     		push	{r6, r7, lr}
 139              	.LCFI1:
 140              		.cfi_def_cfa_offset 32
 141              		.cfi_offset 8, -32
 142              		.cfi_offset 9, -28
 143              		.cfi_offset 10, -24
 144 000a 0400     		movs	r4, r0
 145 000c 0E00     		movs	r6, r1
 146 000e 1500     		movs	r5, r2
 483:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameters */
 484:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 485:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 486:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMA_MASK(RTC_AlarmStruct->AlarmMask));
 487:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMA_DATE_WEEKDAY_SEL(RTC_AlarmStruct->AlarmDateWeekDaySel));
 488:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
ARM GAS  /tmp/ccnIlCuV.s 			page 12


 489:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 147              		.loc 1 489 0
 148 0010 0029     		cmp	r1, #0
 149 0012 19D1     		bne	.L5
 150              	.LVL4:
 151              	.LBB120:
 152              	.LBB121:
 153              		.file 2 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @file    stm32l0xx_ll_rtc.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief   Header file of RTC LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *      without specific prior written permission.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   ******************************************************************************
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #ifndef __STM32L0xx_LL_RTC_H
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __STM32L0xx_LL_RTC_H
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #ifdef __cplusplus
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** extern "C" {
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #include "stm32l0xx.h"
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @addtogroup STM32L0xx_LL_Driver
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
ARM GAS  /tmp/ccnIlCuV.s 			page 13


  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC)
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL RTC
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Constants RTC Private Constants
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Masks Definition */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_INIT_MASK                 ((uint32_t)0xFFFFFFFFU)
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_RSF_MASK                  ((uint32_t)~(RTC_ISR_INIT | RTC_ISR_RSF))
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Write protection defines */
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_DISABLE  ((uint8_t)0xFFU)
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_1 ((uint8_t)0xCAU)
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_2 ((uint8_t)0x53U)
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Defines used for the bit position in the register and perform offsets */
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TR_HT            (uint32_t)20U
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TR_HU            (uint32_t)16U
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TR_MT            (uint32_t)12U
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TR_MU            (uint32_t)8U
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TR_ST            (uint32_t)4U
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TR_SU            (uint32_t)0U
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_DR_YT            (uint32_t)20U
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_DR_YU            (uint32_t)16U
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_DR_MT            (uint32_t)12U
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_DR_MU            (uint32_t)8U
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_DR_DT            (uint32_t)4U
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_DR_DU            (uint32_t)0U
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_DR_WDU           (uint32_t)13U
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_DT          (uint32_t)28U
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_DU          (uint32_t)24U
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_HT          (uint32_t)20U
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_HU          (uint32_t)16U
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_MT          (uint32_t)12U
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_MU          (uint32_t)8U
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_SU          (uint32_t)0U
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_ST          (uint32_t)4U
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_DT          (uint32_t)28U
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_DU          (uint32_t)24U
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_HT          (uint32_t)20U
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_HU          (uint32_t)16U
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_MT          (uint32_t)12U
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_MU          (uint32_t)8U
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_SU          (uint32_t)0U
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_ST          (uint32_t)4U
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_PRER_PREDIV_A    (uint32_t)16U
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMA_MASKSS      (uint32_t)24U
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_ALMB_MASKSS      (uint32_t)24U
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TS_HU            (uint32_t)16U
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TS_MNU           (uint32_t)8U
ARM GAS  /tmp/ccnIlCuV.s 			page 14


 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TS_WDU           (uint32_t)13U
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_POSITION_TS_MU            (uint32_t)8U
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Defines used to combine date & time */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_WEEKDAY            (uint32_t)24U
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_DAY                (uint32_t)16U
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_MONTH              (uint32_t)8U
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_HOUR               (uint32_t)16U
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define RTC_OFFSET_MINUTE             (uint32_t)8U
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Private macros ------------------------------------------------------------*/
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Macros RTC Private Macros
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /*USE_FULL_LL_DRIVER*/
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Exported types ------------------------------------------------------------*/
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_ES_INIT RTC Exported Init structure
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  RTC Init structures definition
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** typedef struct
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t HourFormat;   /*!< Specifies the RTC Hours Format.
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This parameter can be a value of @ref RTC_LL_EC_HOURFORMAT
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               @ref LL_RTC_SetHourFormat(). */
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t AsynchPrescaler; /*!< Specifies the RTC Asynchronous Predivider value.
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               @ref LL_RTC_SetAsynchPrescaler(). */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t SynchPrescaler;  /*!< Specifies the RTC Synchronous Predivider value.
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                               @ref LL_RTC_SetSynchPrescaler(). */
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** } LL_RTC_InitTypeDef;
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  RTC Time structure definition
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
ARM GAS  /tmp/ccnIlCuV.s 			page 15


 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** typedef struct
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t TimeFormat; /*!< Specifies the RTC AM/PM Time.
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter can be a value of @ref RTC_LL_EC_TIME_FORMAT
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Hours;       /*!< Specifies the RTC Time Hours.
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 12 
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 23 
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Minutes;     /*!< Specifies the RTC Time Minutes.
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Seconds;     /*!< Specifies the RTC Time Seconds.
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** } LL_RTC_TimeTypeDef;
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  RTC Date structure definition
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** typedef struct
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t WeekDay;  /*!< Specifies the RTC Date WeekDay.
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_WEEKDAY
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Month;    /*!< Specifies the RTC Date Month.
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_MONTH
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Day;      /*!< Specifies the RTC Date Day.
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 1 and Max_Data = 31
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t Year;     /*!< Specifies the RTC Date Year.
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 0 and Max_Data = 99
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** } LL_RTC_DateTypeDef;
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  RTC Alarm structure definition
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** typedef struct
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   LL_RTC_TimeTypeDef AlarmTime;  /*!< Specifies the RTC Alarm Time members. */
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
ARM GAS  /tmp/ccnIlCuV.s 			page 16


 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t AlarmMask;            /*!< Specifies the RTC Alarm Masks.
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_MASK for
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       or @ref LL_RTC_ALMB_SetMask() for ALARM B
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                  */
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint32_t AlarmDateWeekDaySel;  /*!< Specifies the RTC Alarm is on day or WeekDay.
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_WEEKDAY_
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_EnableWeekday() or @ref LL_RT
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                  */
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   uint8_t AlarmDateWeekDay;      /*!< Specifies the RTC Alarm Day/WeekDay.
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to day, this parameter  must be a 
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_SetDay() for ALARM B.
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to Weekday, this parameter can be 
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_SetWeekDay() for ALARM B.
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                                  */
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** } LL_RTC_AlarmTypeDef;
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Exported constants --------------------------------------------------------*/
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Constants RTC Exported Constants
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_FORMAT FORMAT
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_FORMAT_BIN                  ((uint32_t)0x000000000U) /*!< Binary data format */
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_FORMAT_BCD                  ((uint32_t)0x000000001U) /*!< BCD data format */
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_WEEKDAY_SELECTION RTC Alarm A Date WeekDay
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_DATE    ((uint32_t)0x00000000U) /*!< Alarm A Date is selected */
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMAR_WDSEL        /*!< Alarm A WeekDay is selected
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_WEEKDAY_SELECTION RTC Alarm B Date WeekDay
ARM GAS  /tmp/ccnIlCuV.s 			page 17


 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_DATEWEEKDAYSEL_DATE    ((uint32_t)0x00000000U) /*!< Alarm B Date is selected */
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMBR_WDSEL        /*!< Alarm B WeekDay is selected
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_GET_FLAG Get Flags Defines
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief    Flags defines which can be used with LL_RTC_ReadReg function
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_RECALPF                 RTC_ISR_RECALPF
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP3F                  RTC_ISR_TAMP3F
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP2F                  RTC_ISR_TAMP2F
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP1F                  RTC_ISR_TAMP1F
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TSOVF                   RTC_ISR_TSOVF
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_TSF                     RTC_ISR_TSF
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_WUTF                    RTC_ISR_WUTF
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRBF                   RTC_ISR_ALRBF
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAF                   RTC_ISR_ALRAF
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_INITF                   RTC_ISR_INITF
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_RSF                     RTC_ISR_RSF
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_INITS                   RTC_ISR_INITS
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_SHPF                    RTC_ISR_SHPF
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_WUTWF                   RTC_ISR_WUTWF
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRBWF                  RTC_ISR_ALRBWF
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAWF                  RTC_ISR_ALRAWF
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_IT IT Defines
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief    IT defines which can be used with LL_RTC_ReadReg and  LL_RTC_WriteReg functions
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CR_TSIE                     RTC_CR_TSIE
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CR_WUTIE                    RTC_CR_WUTIE
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CR_ALRBIE                   RTC_CR_ALRBIE
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CR_ALRAIE                   RTC_CR_ALRAIE
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP3IE              RTC_TAMPCR_TAMP3IE
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP2IE              RTC_TAMPCR_TAMP2IE
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP1IE              RTC_TAMPCR_TAMP1IE
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMPIE               RTC_TAMPCR_TAMPIE
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WEEKDAY  WEEK DAY
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_MONDAY              ((uint8_t)0x01U) /*!< Monday    */
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_TUESDAY             ((uint8_t)0x02U) /*!< Tuesday   */
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_WEDNESDAY           ((uint8_t)0x03U) /*!< Wednesday */
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_THURSDAY            ((uint8_t)0x04U) /*!< Thrusday  */
ARM GAS  /tmp/ccnIlCuV.s 			page 18


 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_FRIDAY              ((uint8_t)0x05U) /*!< Friday    */
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SATURDAY            ((uint8_t)0x06U) /*!< Saturday  */
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SUNDAY              ((uint8_t)0x07U) /*!< Sunday    */
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_MONTH  MONTH
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_JANUARY               ((uint8_t)0x01U)  /*!< January   */
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_FEBRUARY              ((uint8_t)0x02U)  /*!< February  */
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_MARCH                 ((uint8_t)0x03U)  /*!< March     */
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_APRIL                 ((uint8_t)0x04U)  /*!< April     */
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_MAY                   ((uint8_t)0x05U)  /*!< May       */
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_JUNE                  ((uint8_t)0x06U)  /*!< June      */
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_JULY                  ((uint8_t)0x07U)  /*!< July      */
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_AUGUST                ((uint8_t)0x08U)  /*!< August    */
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_SEPTEMBER             ((uint8_t)0x09U)  /*!< September */
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_OCTOBER               ((uint8_t)0x10U)  /*!< October   */
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_NOVEMBER              ((uint8_t)0x11U)  /*!< November  */
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_MONTH_DECEMBER              ((uint8_t)0x12U)  /*!< December  */
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_HOURFORMAT  HOUR FORMAT
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_24HOUR           (uint32_t)0x00000000U /*!< 24 hour/day format */
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_AMPM             RTC_CR_FMT            /*!< AM/PM hour format */
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARMOUT  ALARM OUTPUT
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_DISABLE            ((uint32_t)0x00000000U) /*!< Output disabled */
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMA               RTC_CR_OSEL_0           /*!< Alarm A output enabled */
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMB               RTC_CR_OSEL_1           /*!< Alarm B output enabled */
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_WAKEUP             RTC_CR_OSEL             /*!< Wakeup output enabled */
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARM_OUTPUTTYPE  ALARM OUTPUT TYPE
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN  (uint32_t)0x00000000U  /*!< RTC_ALARM, when mapped on PC
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL   RTC_OR_ALARMOUTTYPE /*!< RTC_ALARM, when mapped on PC13,
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_OUTPUTPOLARITY_PIN  OUTPUT POLARITY PIN
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
ARM GAS  /tmp/ccnIlCuV.s 			page 19


 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_HIGH     (uint32_t)0x00000000U /*!< Pin is high when ALRAF/ALRBF/
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_LOW      RTC_CR_POL            /*!< Pin is low when ALRAF/ALRBF/W
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIME_FORMAT TIME FORMAT
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_AM_OR_24        (uint32_t)0x00000000U /*!< AM or 24-hour format */
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_PM              RTC_TR_PM             /*!< PM */
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_SHIFT_SECOND  SHIFT SECOND
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_DELAY          (uint32_t)0x00000000U /* Delay (seconds) = SUBFS / (PRED
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_ADVANCE        RTC_SHIFTR_ADD1S      /* Advance (seconds) = (1 - (SUBFS
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_MASK  ALARMA MASK
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_NONE              ((uint32_t)0x00000000U) /*!< No masks applied on Alarm A
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_DATEWEEKDAY       RTC_ALRMAR_MSK4         /*!< Date/day do not care in Ala
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_HOURS             RTC_ALRMAR_MSK3         /*!< Hours do not care in Alarm 
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_MINUTES           RTC_ALRMAR_MSK2         /*!< Minutes do not care in Alar
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_SECONDS           RTC_ALRMAR_MSK1         /*!< Seconds do not care in Alar
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_ALL               (RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | R
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_TIME_FORMAT  ALARMA TIME FORMAT
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_AM         (uint32_t)0x00000000U /*!< AM or 24-hour format */
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_PM         RTC_ALRMAR_PM         /*!< PM */
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_MASK  ALARMB MASK
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_NONE              ((uint32_t)0x00000000U) /*!< No masks applied on Alarm B
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_DATEWEEKDAY       RTC_ALRMBR_MSK4         /*!< Date/day do not care in Ala
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_HOURS             RTC_ALRMBR_MSK3         /*!< Hours do not care in Alarm 
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_MINUTES           RTC_ALRMBR_MSK2         /*!< Minutes do not care in Alar
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_SECONDS           RTC_ALRMBR_MSK1         /*!< Seconds do not care in Alar
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_ALL               (RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | R
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  /tmp/ccnIlCuV.s 			page 20


 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_TIME_FORMAT  ALARMB TIME FORMAT
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_TIME_FORMAT_AM         (uint32_t)0x00000000U /*!< AM or 24-hour format */
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ALMB_TIME_FORMAT_PM         RTC_ALRMBR_PM         /*!< PM */
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIMESTAMP_EDGE  TIMESTAMP EDGE
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_RISING       (uint32_t)0x00000000U /*!< RTC_TS input rising edge gene
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_FALLING      RTC_CR_TSEDGE         /*!< RTC_TS input falling edge gen
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TS_TIME_FORMAT  TIMESTAMP TIME FORMAT
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_AM           (uint32_t)0x00000000U /*!< AM or 24-hour format */
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_PM           RTC_TSTR_PM           /*!< PM */
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER  TAMPER
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_1                    RTC_TAMPCR_TAMP1E /*!< RTC_TAMP1 input detection */
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_2                    RTC_TAMPCR_TAMP2E /*!< RTC_TAMP2 input detection */
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_3                    RTC_TAMPCR_TAMP3E /*!< RTC_TAMP3 input detection */
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_MASK  TAMPER MASK
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER1         RTC_TAMPCR_TAMP1MF /*!< Tamper 1 event generates a trigg
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER2         RTC_TAMPCR_TAMP2MF /*!< Tamper 2 event generates a trigg
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER3         RTC_TAMPCR_TAMP3MF /*!< Tamper 3 event generates a trigg
ARM GAS  /tmp/ccnIlCuV.s 			page 21


 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_NOERASE  TAMPER NO ERASE
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER1      RTC_TAMPCR_TAMP1NOERASE /*!< Tamper 1 event does not era
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER2      RTC_TAMPCR_TAMP2NOERASE /*!< Tamper 2 event does not era
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER3      RTC_TAMPCR_TAMP3NOERASE /*!< Tamper 3 event does not era
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPPRCH)
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_DURATION  TAMPER DURATION
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_1RTCCLK     ((uint32_t)0x00000000U) /*!< Tamper pins are pre-charged
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_2RTCCLK     RTC_TAMPCR_TAMPPRCH_0  /*!< Tamper pins are pre-charged 
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_4RTCCLK     RTC_TAMPCR_TAMPPRCH_1  /*!< Tamper pins are pre-charged 
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_8RTCCLK     RTC_TAMPCR_TAMPPRCH    /*!< Tamper pins are pre-charged 
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPPRCH */
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPFLT)
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_FILTER  TAMPER FILTER
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_DISABLE       ((uint32_t)0x00000000U)  /*!< Tamper filter is disabled 
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_2SAMPLE       RTC_TAMPCR_TAMPFLT_0    /*!< Tamper is activated after 2
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_4SAMPLE       RTC_TAMPCR_TAMPFLT_1    /*!< Tamper is activated after 4
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_8SAMPLE       RTC_TAMPCR_TAMPFLT      /*!< Tamper is activated after 8
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPFLT */
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPFREQ)
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_SAMPLFREQDIV  TAMPER SAMPLING FREQUENCY DIVIDER
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_32768   ((uint32_t)0x00000000U)                          /*!< Ea
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_16384   RTC_TAMPCR_TAMPFREQ_0                           /*!< Eac
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_8192    RTC_TAMPCR_TAMPFREQ_1                           /*!< Eac
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_4096    (RTC_TAMPCR_TAMPFREQ_1 | RTC_TAMPCR_TAMPFREQ_0) /*!< Eac
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_2048    RTC_TAMPCR_TAMPFREQ_2                           /*!< Eac
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_1024    (RTC_TAMPCR_TAMPFREQ_2 | RTC_TAMPCR_TAMPFREQ_0) /*!< Eac
ARM GAS  /tmp/ccnIlCuV.s 			page 22


 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_512     (RTC_TAMPCR_TAMPFREQ_2 | RTC_TAMPCR_TAMPFREQ_1) /*!< Eac
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_256     RTC_TAMPCR_TAMPFREQ                             /*!< Eac
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPFREQ */
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_ACTIVELEVEL  TAMPER ACTIVE LEVEL
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP1    RTC_TAMPCR_TAMP1TRG /*!< RTC_TAMP1 input falling edge (i
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP2    RTC_TAMPCR_TAMP2TRG /*!< RTC_TAMP2 input falling edge (i
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP3    RTC_TAMPCR_TAMP3TRG /*!< RTC_TAMP3 input falling edge (i
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WAKEUPCLOCK_DIV  WAKEUP CLOCK DIV
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_16          ((uint32_t)0x00000000U)               /*!< RTC/16 clock 
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_8           (RTC_CR_WUCKSEL_0)                    /*!< RTC/8 clock i
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_4           (RTC_CR_WUCKSEL_1)                    /*!< RTC/4 clock i
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_2           (RTC_CR_WUCKSEL_1 | RTC_CR_WUCKSEL_0) /*!< RTC/2 clock i
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE          (RTC_CR_WUCKSEL_2)                    /*!< ck_spre (usua
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE_WUT      (RTC_CR_WUCKSEL_2 | RTC_CR_WUCKSEL_1) /*!< ck_spre (usua
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_BACKUP_SUPPORT)
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_BKP  BACKUP
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR0                     ((uint32_t)0x00000000U)
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR1                     ((uint32_t)0x00000001U)
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR2                     ((uint32_t)0x00000002U)
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR3                     ((uint32_t)0x00000003U)
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_BKP_DR4                     ((uint32_t)0x00000004U)
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_BACKUP_SUPPORT */
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_OUTPUT  Calibration output
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_NONE           (uint32_t)0x00000000U       /*!< Calibration output disa
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_1HZ            (RTC_CR_COE | RTC_CR_COSEL) /*!< Calibration output is 5
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_512HZ          (RTC_CR_COE)                /*!< Calibration output is 1
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  /tmp/ccnIlCuV.s 			page 23


 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_INSERTPULSE  Calibration pulse insertion 
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_NONE      (uint32_t)0x00000000U /*!< No RTCCLK pulses are added */
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_SET       RTC_CALR_CALP         /*!< One RTCCLK pulse is effective
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_PERIOD  Calibration period
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_32SEC          (uint32_t)0x00000000U /*!< Use a 32-second calibration c
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_16SEC          RTC_CALR_CALW16       /*!< Use a 16-second calibration c
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_8SEC           RTC_CALR_CALW8        /*!< Use a 8-second calibration cy
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Exported macro ------------------------------------------------------------*/
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Macros RTC Exported Macros
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_WRITE_READ Common Write and read registers Macros
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Write a value in RTC register
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __REG__ Register to be written
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __VALUE__ Value to be written in the register
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Read a value in RTC register
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __REG__ Register to be read
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Register value
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define LL_RTC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Convert Convert helper Macros
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
ARM GAS  /tmp/ccnIlCuV.s 			page 24


 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from 2 digit decimal format to BCD format
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __VALUE__ Byte to be converted
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Converted byte
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BIN2BCD(__VALUE__) (uint8_t)((((__VALUE__) / 10U) << 4U) | ((__VALUE__) % 
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from BCD format to 2 digit decimal format
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __VALUE__ BCD value to be converted
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Converted byte
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BCD2BIN(__VALUE__) (uint8_t)(((uint8_t)((__VALUE__) & (uint8_t)0xF0U) >> (
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Date Date helper Macros
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve weekday.
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Date returned by @ref  LL_RTC_DATE_Get function.
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_WEEKDAY(__RTC_DATE__) (((__RTC_DATE__) >> RTC_OFFSET_WEEKDAY) & 0x000000FFU)
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Year in BCD format
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Year in BCD format (0x00 . . . 0x99)
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_YEAR(__RTC_DATE__) ((__RTC_DATE__) & 0x000000FFU)
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Month in BCD format
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
ARM GAS  /tmp/ccnIlCuV.s 			page 25


 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_MONTH(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_MONTH) & 0x000000FFU)
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Day in BCD format
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Day in BCD format (0x01 . . . 0x31)
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_DAY(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_DAY) & 0x000000FFU)
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Time Time helper Macros
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve hour in BCD format
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Hours in BCD format (0x01. . .0x12 or between Min_Data=0x00 and Max_Data=0x23)
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_HOUR(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_HOUR) & 0x000000FFU)
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve minute in BCD format
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Minutes in BCD format (0x00. . .0x59)
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_MINUTE(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_MINUTE) & 0x000000FFU)
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve second in BCD format
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Seconds in  format (0x00. . .0x59)
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #define __LL_RTC_GET_SECOND(__RTC_TIME__) ((__RTC_TIME__) & 0x000000FFU)
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /* Exported functions --------------------------------------------------------*/
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Functions RTC Exported Functions
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Configuration Configuration
ARM GAS  /tmp/ccnIlCuV.s 			page 26


 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Hours format (24 hour/day or AM/PM hour format)
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_SetHourFormat
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  HourFormat This parameter can be one of the following values:
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetHourFormat(RTC_TypeDef *RTCx, uint32_t HourFormat)
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_FMT, HourFormat);
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Hours format (24 hour/day or AM/PM hour format)
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_GetHourFormat
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetHourFormat(RTC_TypeDef *RTCx)
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_FMT));
 154              		.loc 2 820 0
 155 0014 8368     		ldr	r3, [r0, #8]
 156              	.LVL5:
 157              	.LBE121:
 158              	.LBE120:
 490:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 491:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 159              		.loc 1 491 0
 160 0016 5B06     		lsls	r3, r3, #25
 161 0018 01D4     		bmi	.L7
 492:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 493:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(RTC_AlarmStruct->AlarmTime.Hours));
 494:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 495:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 496:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 497:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 498:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 162              		.loc 1 498 0
 163 001a 0023     		movs	r3, #0
 164 001c 1360     		str	r3, [r2]
 165              	.L7:
 166              	.LVL6:
 167              	.LBB122:
 168              	.LBB123:
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  /tmp/ccnIlCuV.s 			page 27


 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Select the flag to be routed to RTC_ALARM output
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_SetAlarmOutEvent
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  AlarmOutput This parameter can be one of the following values:
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutEvent(RTC_TypeDef *RTCx, uint32_t AlarmOutput)
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_OSEL, AlarmOutput);
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get the flag to be routed to RTC_ALARM output
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_GetAlarmOutEvent
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutEvent(RTC_TypeDef *RTCx)
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_OSEL));
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set RTC_ALARM output type (ALARM in push-pull or open-drain output)
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Used only when RTC_ALARM is mapped on PC13
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll OR        ALARMOUTTYPE  LL_RTC_SetAlarmOutputType
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Output This parameter can be one of the following values:
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutputType(RTC_TypeDef *RTCx, uint32_t Output)
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->OR, RTC_OR_ALARMOUTTYPE, Output);
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_ALARM output type (ALARM in push-pull or open-drain output)
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   used only when RTC_ALARM is mapped on PC13
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll OR        ALARMOUTTYPE  LL_RTC_GetAlarmOutputType
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutputType(RTC_TypeDef *RTCx)
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
ARM GAS  /tmp/ccnIlCuV.s 			page 28


 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->OR, RTC_OR_ALARMOUTTYPE));
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable initialization mode
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Initialization mode is used to program time and date register (RTC_TR and RTC_DR)
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         and prescaler register (RTC_PRER).
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         Counters are stopped and start counting from the new value when INIT is reset.
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_EnableInitMode
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableInitMode(RTC_TypeDef *RTCx)
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   /* Set the Initialization mode */
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, RTC_INIT_MASK);
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable initialization mode (Free running mode)
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_DisableInitMode
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableInitMode(RTC_TypeDef *RTCx)
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   /* Exit Initialization mode */
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (uint32_t)~RTC_ISR_INIT);
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Output polarity (pin is low when ALRAF/ALRBF/WUTF is asserted)
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_SetOutputPolarity
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Polarity This parameter can be one of the following values:
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPolarity(RTC_TypeDef *RTCx, uint32_t Polarity)
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_POL, Polarity);
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Output polarity
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_GetOutputPolarity
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetOutputPolarity(RTC_TypeDef *RTCx)
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_POL));
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
ARM GAS  /tmp/ccnIlCuV.s 			page 29


 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Bypass the shadow registers
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_EnableShadowRegBypass
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableShadowRegBypass(RTC_TypeDef *RTCx)
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BYPSHAD);
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Bypass the shadow registers
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_DisableShadowRegBypass
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableShadowRegBypass(RTC_TypeDef *RTCx)
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BYPSHAD);
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Check if Shadow registers bypass is enabled or not.
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_IsShadowRegBypassEnabled
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsShadowRegBypassEnabled(RTC_TypeDef *RTCx)
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BYPSHAD) == (RTC_CR_BYPSHAD));
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable RTC_REFIN reference clock detection (50 or 60 Hz)
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_EnableRefClock
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableRefClock(RTC_TypeDef *RTCx)
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_REFCKON);
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable RTC_REFIN reference clock detection (50 or 60 Hz)
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_DisableRefClock
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableRefClock(RTC_TypeDef *RTCx)
ARM GAS  /tmp/ccnIlCuV.s 			page 30


 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_REFCKON);
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Asynchronous prescaler factor
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_SetAsynchPrescaler
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  AsynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7F
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAsynchPrescaler(RTC_TypeDef *RTCx, uint32_t AsynchPrescaler)
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_A, AsynchPrescaler << RTC_POSITION_PRER_PREDIV_A);
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Synchronous prescaler factor
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_SetSynchPrescaler
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  SynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7FFF
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetSynchPrescaler(RTC_TypeDef *RTCx, uint32_t SynchPrescaler)
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_S, SynchPrescaler);
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Asynchronous prescaler factor
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_GetAsynchPrescaler
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7F
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAsynchPrescaler(RTC_TypeDef *RTCx)
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_A) >> RTC_POSITION_PRER_PREDIV_A);
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Synchronous prescaler factor
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_GetSynchPrescaler
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7FFF
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetSynchPrescaler(RTC_TypeDef *RTCx)
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_S));
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable the write protection for RTC registers.
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll WPR          KEY           LL_RTC_EnableWriteProtection
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableWriteProtection(RTC_TypeDef *RTCx)
ARM GAS  /tmp/ccnIlCuV.s 			page 31


1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_DISABLE);
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable the write protection for RTC registers.
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll WPR          KEY           LL_RTC_DisableWriteProtection
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableWriteProtection(RTC_TypeDef *RTCx)
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_1);
 169              		.loc 2 1064 0
 170 001e CA23     		movs	r3, #202
 171 0020 6362     		str	r3, [r4, #36]
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 172              		.loc 2 1065 0
 173 0022 773B     		subs	r3, r3, #119
 174 0024 6362     		str	r3, [r4, #36]
 175              	.LVL7:
 176              	.LBE123:
 177              	.LBE122:
 499:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_AlarmStruct->AlarmTime.Hours));
 500:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 501:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(RTC_AlarmStruct->AlarmTime.Minutes));
 502:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(RTC_AlarmStruct->AlarmTime.Seconds));
 503:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 504:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 505:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 506:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(RTC_AlarmStruct->AlarmDateWeekDay));
 507:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 508:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 509:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 510:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(RTC_AlarmStruct->AlarmDateWeekDay));
 511:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 512:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 513:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   else
 514:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 515:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 516:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 517:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 518:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 519:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 520:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 521:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 522:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 523:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 524:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 525:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 526:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Minutes)));
 527:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Seconds)));
 528:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 529:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 530:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 531:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 532:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
ARM GAS  /tmp/ccnIlCuV.s 			page 32


 533:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 534:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 535:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 536:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 537:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 538:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 539:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 540:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 541:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 542:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Select weekday selection */
 543:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 178              		.loc 1 543 0
 179 0026 EB68     		ldr	r3, [r5, #12]
 180 0028 002B     		cmp	r3, #0
 181 002a 28D1     		bne	.L9
 182              	.LVL8:
 183              	.LBB124:
 184              	.LBB125:
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable RTC_OUT remap
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll OR           OUT_RMP       LL_RTC_EnableOutRemap
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableOutRemap(RTC_TypeDef *RTCx)
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->OR, RTC_OR_OUT_RMP);
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable RTC_OUT remap
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll OR           OUT_RMP       LL_RTC_DisableOutRemap
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableOutRemap(RTC_TypeDef *RTCx)
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->OR, RTC_OR_OUT_RMP);
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Time Time
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set time format (AM/24-hour or PM notation)
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_SetFormat
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
ARM GAS  /tmp/ccnIlCuV.s 			page 33


1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, RTC_TR_PM, TimeFormat);
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get time format (AM or PM notation)
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_GetFormat
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetFormat(RTC_TypeDef *RTCx)
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, RTC_TR_PM));
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Hours in BCD format
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert hour from binary to BCD for
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_SetHour\n
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_SetHour
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_HT | RTC_TR_HU),
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_POSITION_TR_HT - 4U)) | ((Hours & 0x0FU) << RTC_POSITION_TR_
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Hours in BCD format
1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert hour from BCD to
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       Binary format
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_GetHour\n
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_GetHour
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetHour(RTC_TypeDef *RTCx)
ARM GAS  /tmp/ccnIlCuV.s 			page 34


1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU));
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_TR_HT) >> RTC_POSITION_TR_HT) << 4U) | ((temp & RTC_TR_HU) >> RTC
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Minutes in BCD format
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           MNT           LL_RTC_TIME_SetMinute\n
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_SetMinute
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU),
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_POSITION_TR_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Minutes in BCD format
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert minute from BCD
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       to Binary format
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           MNT           LL_RTC_TIME_GetMinute\n
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_GetMinute
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetMinute(RTC_TypeDef *RTCx)
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU));
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_TR_MNT) >> RTC_POSITION_TR_MT) << 4U) | ((temp & RTC_TR_MNU) >> R
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Seconds in BCD format
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           ST            LL_RTC_TIME_SetSecond\n
1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_SetSecond
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
ARM GAS  /tmp/ccnIlCuV.s 			page 35


1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_ST | RTC_TR_SU),
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_POSITION_TR_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITION
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Seconds in BCD format
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD
1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       to Binary format
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           ST            LL_RTC_TIME_GetSecond\n
1233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_GetSecond
1234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSecond(RTC_TypeDef *RTCx)
1238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_ST | RTC_TR_SU));
1242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_TR_ST) >> RTC_POSITION_TR_ST) << 4U) | ((temp & RTC_TR_SU) >> RTC
1243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set time (hour, minute and second) in BCD format
1247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note TimeFormat and Hours should follow the same format
1250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_Config\n
1251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HT            LL_RTC_TIME_Config\n
1252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_Config\n
1253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNT           LL_RTC_TIME_Config\n
1254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_Config\n
1255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           ST            LL_RTC_TIME_Config\n
1256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_Config
1257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Config(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours, ui
1267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = Format12_24                                                                               
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_POSITION_TR_HT - 4U)) | ((Hours & 0x0FU) << RTC_POSITION_TR_HU))
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_TR_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_TR_
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_POSITION_TR_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITION_TR_
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_PM | RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | R
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
ARM GAS  /tmp/ccnIlCuV.s 			page 36


1276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get time (hour, minute and second) in BCD format
1279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
1284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       are available to get independently each parameter.
1285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_Get\n
1286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_Get\n
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNT           LL_RTC_TIME_Get\n
1288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_Get\n
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           ST            LL_RTC_TIME_Get\n
1290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_Get
1291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds (Format: 0x00HHMMSS).
1293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_Get(RTC_TypeDef *RTCx)
1295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_TIME_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_TIME_GetMinute(RTCx) <
1297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Memorize whether the daylight saving time change has been performed
1301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BCK           LL_RTC_TIME_EnableDayLightStore
1303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_EnableDayLightStore(RTC_TypeDef *RTCx)
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BCK);
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable memorization whether the daylight saving time change has been performed.
1313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BCK           LL_RTC_TIME_DisableDayLightStore
1315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DisableDayLightStore(RTC_TypeDef *RTCx)
1319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BCK);
1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Check if RTC Day Light Saving stored operation has been enabled or not
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           BCK           LL_RTC_TIME_IsDayLightStoreEnabled
1326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_IsDayLightStoreEnabled(RTC_TypeDef *RTCx)
1330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BCK) == (RTC_CR_BCK));
1332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
ARM GAS  /tmp/ccnIlCuV.s 			page 37


1333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Subtract 1 hour (winter time change)
1336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           SUB1H         LL_RTC_TIME_DecHour
1338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DecHour(RTC_TypeDef *RTCx)
1342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_SUB1H);
1344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Add 1 hour (summer time change)
1348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ADD1H         LL_RTC_TIME_IncHour
1350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_IncHour(RTC_TypeDef *RTCx)
1354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ADD1H);
1356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Sub second value in the synchronous prescaler counter.
1360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note  You can use both SubSeconds value and SecondFraction (PREDIV_S through
1361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        LL_RTC_GetSynchPrescaler function) terms returned to convert Calendar
1362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        SubSeconds value in second fraction ratio with time unit following
1363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        generic formula:
1364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *          ==> Seconds fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1
1365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        This conversion can be performed only if no shift operation is pending
1366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *        (ie. SHFP=0) when PREDIV_S >= SS.
1367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll SSR          SS            LL_RTC_TIME_GetSubSecond
1368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Sub second value (number between 0 and 65535)
1370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSubSecond(RTC_TypeDef *RTCx)
1372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->SSR, RTC_SSR_SS));
1374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Synchronize to a remote clock with a high degree of precision.
1378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   This operation effectively subtracts from (delays) or advance the clock of a fraction o
1379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
1381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll SHIFTR       ADD1S         LL_RTC_TIME_Synchronize\n
1382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         SHIFTR       SUBFS         LL_RTC_TIME_Synchronize
1383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  ShiftSecond This parameter can be one of the following values:
1385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_DELAY
1386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_ADVANCE
1387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Fraction Number of Seconds Fractions (any value from 0 to 0x7FFF)
1388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
ARM GAS  /tmp/ccnIlCuV.s 			page 38


1390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Synchronize(RTC_TypeDef *RTCx, uint32_t ShiftSecond, uint32_t Frac
1391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->SHIFTR, ShiftSecond | Fraction);
1393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
1397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Date Date
1400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
1401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Year in BCD format
1405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Year from binary to BCD for
1406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           YT            LL_RTC_DATE_SetYear\n
1407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_SetYear
1408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetYear(RTC_TypeDef *RTCx, uint32_t Year)
1413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_YT | RTC_DR_YU),
1415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Year & 0xF0U) << (RTC_POSITION_DR_YT - 4U)) | ((Year & 0x0FU) << RTC_POSITION_DR_YU
1416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Year in BCD format
1420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Year from BCD to Binary for
1423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           YT            LL_RTC_DATE_GetYear\n
1424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_GetYear
1425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x99
1427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetYear(RTC_TypeDef *RTCx)
1429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_YT | RTC_DR_YU));
1433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_YT) >> RTC_POSITION_DR_YT) << 4U) | ((temp & RTC_DR_YU) >> RTC
1434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Week day
1438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_SetWeekDay
1439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
ARM GAS  /tmp/ccnIlCuV.s 			page 39


1447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, RTC_DR_WDU, WeekDay << RTC_POSITION_DR_WDU);
1453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Week day
1457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_GetWeekDay
1460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetWeekDay(RTC_TypeDef *RTCx)
1471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->DR, RTC_DR_WDU) >> RTC_POSITION_DR_WDU);
1473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Month in BCD format
1477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Month from binary to BCD fo
1478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           MT            LL_RTC_DATE_SetMonth\n
1479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_SetMonth
1480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetMonth(RTC_TypeDef *RTCx, uint32_t Month)
1497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_MT | RTC_DR_MU),
1499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Month & 0xF0U) << (RTC_POSITION_DR_MT - 4U)) | ((Month & 0x0FU) << RTC_POSITION_DR_
1500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Month in BCD format
ARM GAS  /tmp/ccnIlCuV.s 			page 40


1504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
1507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           MT            LL_RTC_DATE_GetMonth\n
1508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_GetMonth
1509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetMonth(RTC_TypeDef *RTCx)
1525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_MT | RTC_DR_MU));
1529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_MT) >> RTC_POSITION_DR_MT) << 4U) | ((temp & RTC_DR_MU) >> RTC
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Day in BCD format
1534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           DT            LL_RTC_DATE_SetDay\n
1536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_SetDay
1537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_DT | RTC_DR_DU),
1544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_POSITION_DR_DT - 4U)) | ((Day & 0x0FU) << RTC_POSITION_DR_DU))
1545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Day in BCD format
1549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           DT            LL_RTC_DATE_GetDay\n
1553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_GetDay
1554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetDay(RTC_TypeDef *RTCx)
1558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
ARM GAS  /tmp/ccnIlCuV.s 			page 41


1561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_DT | RTC_DR_DU));
1562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_DT) >> RTC_POSITION_DR_DT) << 4U) | ((temp & RTC_DR_DU) >> RTC
1563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set date (WeekDay, Day, Month and Year) in BCD format
1567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_Config\n
1568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MT            LL_RTC_DATE_Config\n
1569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_Config\n
1570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DT            LL_RTC_DATE_Config\n
1571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_Config\n
1572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YT            LL_RTC_DATE_Config\n
1573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_Config
1574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_Config(RTC_TypeDef *RTCx, uint32_t WeekDay, uint32_t Day, uint32_t
1601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = (WeekDay << RTC_POSITION_DR_WDU)                                                        | 
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_POSITION_DR_YT - 4U)) | ((Year & 0x0FU) << RTC_POSITION_DR_YU))  
1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_POSITION_DR_MT - 4U)) | ((Month & 0x0FU) << RTC_POSITION_DR_MU))
1607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Day & 0xF0U) << (RTC_POSITION_DR_DT - 4U)) | ((Day & 0x0FU) << RTC_POSITION_DR_DU));
1608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT | RT
1610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get date (WeekDay, Day, Month and Year) in BCD format
1614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       before reading this bit
1616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_YEAR, __LL_RTC_GET_MONTH,
1617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
ARM GAS  /tmp/ccnIlCuV.s 			page 42


1618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_Get\n
1619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MT            LL_RTC_DATE_Get\n
1620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_Get\n
1621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DT            LL_RTC_DATE_Get\n
1622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_Get\n
1623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YT            LL_RTC_DATE_Get\n
1624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_Get
1625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of WeekDay, Day, Month and Year (Format: 0xWWDDMMYY).
1627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_Get(RTC_TypeDef *RTCx)
1629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_DATE_GetWeekDay(RTCx) << RTC_OFFSET_WEEKDAY) | (LL_RTC_DATE_GetDay(RTCx
1631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
1635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMA ALARMA
1638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
1639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Alarm A
1643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ALRAE         LL_RTC_ALMA_Enable
1645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Enable(RTC_TypeDef *RTCx)
1649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRAE);
1651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Alarm A
1655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ALRAE         LL_RTC_ALMA_Disable
1657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Disable(RTC_TypeDef *RTCx)
1661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRAE);
1663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Specify the Alarm A masks.
1667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MSK4          LL_RTC_ALMA_SetMask\n
1668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK3          LL_RTC_ALMA_SetMask\n
1669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK2          LL_RTC_ALMA_SetMask\n
1670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK1          LL_RTC_ALMA_SetMask
1671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
1673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
1674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
ARM GAS  /tmp/ccnIlCuV.s 			page 43


1675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
1676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
1677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
1678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
1679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
1682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RTC_ALRMAR_MSK1, M
1684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get the Alarm A masks.
1688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MSK4          LL_RTC_ALMA_GetMask\n
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK3          LL_RTC_ALMA_GetMask\n
1690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK2          LL_RTC_ALMA_GetMask\n
1691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MSK1          LL_RTC_ALMA_GetMask
1692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
1694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
1695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
1696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
1697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
1698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
1699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
1700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMask(RTC_TypeDef *RTCx)
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RT
1704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable AlarmA Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
1708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       WDSEL         LL_RTC_ALMA_EnableWeekday
1709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_EnableWeekday(RTC_TypeDef *RTCx)
1713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
1715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable AlarmA Week day selection (DU[3:0] represents the date )
1719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       WDSEL         LL_RTC_ALMA_DisableWeekday
1720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_DisableWeekday(RTC_TypeDef *RTCx)
1724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
 185              		.loc 2 1725 0
 186 002c E369     		ldr	r3, [r4, #28]
 187 002e 454A     		ldr	r2, .L15
 188              	.LVL9:
 189 0030 1340     		ands	r3, r2
 190 0032 E361     		str	r3, [r4, #28]
ARM GAS  /tmp/ccnIlCuV.s 			page 44


 191              	.LVL10:
 192              	.LBE125:
 193              	.LBE124:
 544:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 545:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Set the date for ALARM */
 546:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMA_DisableWeekday(RTCx);
 547:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 194              		.loc 1 547 0
 195 0034 002E     		cmp	r6, #0
 196 0036 0DD0     		beq	.L10
 548:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 549:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       LL_RTC_ALMA_SetDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 197              		.loc 1 549 0
 198 0038 2A7C     		ldrb	r2, [r5, #16]
 199              	.LVL11:
 200              	.LBB126:
 201              	.LBB127:
1726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Day in BCD format
1730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DT            LL_RTC_ALMA_SetDay\n
1732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       DU            LL_RTC_ALMA_SetDay
1733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU),
 202              		.loc 2 1739 0
 203 003a E369     		ldr	r3, [r4, #28]
 204 003c 4249     		ldr	r1, .L15+4
 205              	.LVL12:
 206 003e 0B40     		ands	r3, r1
 207 0040 1206     		lsls	r2, r2, #24
 208              	.LVL13:
 209 0042 1343     		orrs	r3, r2
 210 0044 E361     		str	r3, [r4, #28]
 211              	.LVL14:
 212 0046 26E0     		b	.L11
 213              	.LVL15:
 214              	.L5:
 215              	.LBE127:
 216              	.LBE126:
 217              	.LBB128:
 218              	.LBB129:
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 219              		.loc 2 820 0
 220 0048 8368     		ldr	r3, [r0, #8]
 221              	.LVL16:
 222              	.LBE129:
 223              	.LBE128:
 515:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 224              		.loc 1 515 0
 225 004a 5B06     		lsls	r3, r3, #25
ARM GAS  /tmp/ccnIlCuV.s 			page 45


 226 004c E7D4     		bmi	.L7
 522:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 227              		.loc 1 522 0
 228 004e 0023     		movs	r3, #0
 229 0050 1360     		str	r3, [r2]
 230 0052 E4E7     		b	.L7
 231              	.LVL17:
 232              	.L10:
 550:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 551:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 552:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 553:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       LL_RTC_ALMA_SetDay(RTCx, __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmDateWeekDay));
 233              		.loc 1 553 0
 234 0054 2F7C     		ldrb	r7, [r5, #16]
 235 0056 0A21     		movs	r1, #10
 236              	.LVL18:
 237 0058 3800     		movs	r0, r7
 238              	.LVL19:
 239 005a FFF7FEFF 		bl	__aeabi_uidiv
 240              	.LVL20:
 241 005e 0001     		lsls	r0, r0, #4
 242 0060 C3B2     		uxtb	r3, r0
 243 0062 9846     		mov	r8, r3
 244 0064 0A21     		movs	r1, #10
 245 0066 3800     		movs	r0, r7
 246 0068 FFF7FEFF 		bl	__aeabi_uidivmod
 247              	.LVL21:
 248 006c 4346     		mov	r3, r8
 249 006e 1943     		orrs	r1, r3
 250              	.LVL22:
 251              	.LBB130:
 252              	.LBB131:
 253              		.loc 2 1739 0
 254 0070 E369     		ldr	r3, [r4, #28]
 255 0072 354A     		ldr	r2, .L15+4
 256 0074 1340     		ands	r3, r2
 257 0076 0906     		lsls	r1, r1, #24
 258              	.LVL23:
 259 0078 1943     		orrs	r1, r3
 260 007a E161     		str	r1, [r4, #28]
 261 007c 0BE0     		b	.L11
 262              	.LVL24:
 263              	.L9:
 264              	.LBE131:
 265              	.LBE130:
 266              	.LBB132:
 267              	.LBB133:
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 268              		.loc 2 1714 0
 269 007e E269     		ldr	r2, [r4, #28]
 270              	.LVL25:
 271 0080 8023     		movs	r3, #128
 272 0082 DB05     		lsls	r3, r3, #23
 273 0084 1343     		orrs	r3, r2
 274 0086 E361     		str	r3, [r4, #28]
 275              	.LVL26:
 276              	.LBE133:
ARM GAS  /tmp/ccnIlCuV.s 			page 46


 277              	.LBE132:
 554:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 555:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 556:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   else
 557:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 558:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Set the week day for ALARM */
 559:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMA_EnableWeekday(RTCx);
 560:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMA_SetWeekDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 278              		.loc 1 560 0
 279 0088 2A7C     		ldrb	r2, [r5, #16]
 280              	.LVL27:
 281              	.LBB134:
 282              	.LBB135:
1740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_POSITION_ALMA_DT - 4U)) | ((Day & 0x0FU) << RTC_POSITION_ALMA_
1741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Day in BCD format
1745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DT            LL_RTC_ALMA_GetDay\n
1747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       DU            LL_RTC_ALMA_GetDay
1748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetDay(RTC_TypeDef *RTCx)
1752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU));
1756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMAR_DT) >> RTC_POSITION_ALMA_DT) << 4U) | ((temp & RTC_ALRMAR_
1757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Weekday
1761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DU            LL_RTC_ALMA_SetWeekDay
1762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_DU, WeekDay << RTC_POSITION_ALMA_DU);
 283              		.loc 2 1775 0
 284 008a E369     		ldr	r3, [r4, #28]
 285 008c 2F49     		ldr	r1, .L15+8
 286              	.LVL28:
 287 008e 0B40     		ands	r3, r1
 288 0090 1206     		lsls	r2, r2, #24
 289              	.LVL29:
 290 0092 1343     		orrs	r3, r2
ARM GAS  /tmp/ccnIlCuV.s 			page 47


 291 0094 E361     		str	r3, [r4, #28]
 292              	.LVL30:
 293              	.L11:
 294              	.LBE135:
 295              	.LBE134:
 561:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 562:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 563:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Configure the Alarm register */
 564:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (RTC_Format != LL_RTC_FORMAT_BIN)
 296              		.loc 1 564 0
 297 0096 002E     		cmp	r6, #0
 298 0098 45D1     		bne	.L14
 565:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 566:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMA_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat, RTC_AlarmStruct->AlarmTime.
 567:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 568:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 569:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   else
 570:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 571:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMA_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat,
 299              		.loc 1 571 0
 300 009a 2B68     		ldr	r3, [r5]
 301 009c 9946     		mov	r9, r3
 572:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Hours),
 302              		.loc 1 572 0
 303 009e 2F79     		ldrb	r7, [r5, #4]
 304 00a0 0A21     		movs	r1, #10
 305 00a2 3800     		movs	r0, r7
 306 00a4 FFF7FEFF 		bl	__aeabi_uidiv
 307              	.LVL31:
 308 00a8 0001     		lsls	r0, r0, #4
 309 00aa C6B2     		uxtb	r6, r0
 310              	.LVL32:
 311 00ac 0A21     		movs	r1, #10
 312 00ae 3800     		movs	r0, r7
 313 00b0 FFF7FEFF 		bl	__aeabi_uidivmod
 314              	.LVL33:
 315 00b4 0E43     		orrs	r6, r1
 316 00b6 F3B2     		uxtb	r3, r6
 317 00b8 9846     		mov	r8, r3
 573:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Minutes),
 318              		.loc 1 573 0
 319 00ba 6F79     		ldrb	r7, [r5, #5]
 320 00bc 0A21     		movs	r1, #10
 321 00be 3800     		movs	r0, r7
 322 00c0 FFF7FEFF 		bl	__aeabi_uidiv
 323              	.LVL34:
 324 00c4 0001     		lsls	r0, r0, #4
 325 00c6 C6B2     		uxtb	r6, r0
 326 00c8 0A21     		movs	r1, #10
 327 00ca 3800     		movs	r0, r7
 328 00cc FFF7FEFF 		bl	__aeabi_uidivmod
 329              	.LVL35:
 330 00d0 0E43     		orrs	r6, r1
 331 00d2 F3B2     		uxtb	r3, r6
 332 00d4 9A46     		mov	r10, r3
 574:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Seconds));
 333              		.loc 1 574 0
ARM GAS  /tmp/ccnIlCuV.s 			page 48


 334 00d6 AF79     		ldrb	r7, [r5, #6]
 335 00d8 0A21     		movs	r1, #10
 336 00da 3800     		movs	r0, r7
 337 00dc FFF7FEFF 		bl	__aeabi_uidiv
 338              	.LVL36:
 339 00e0 0001     		lsls	r0, r0, #4
 340 00e2 C6B2     		uxtb	r6, r0
 341 00e4 0A21     		movs	r1, #10
 342 00e6 3800     		movs	r0, r7
 343 00e8 FFF7FEFF 		bl	__aeabi_uidivmod
 344              	.LVL37:
 345 00ec 0E43     		orrs	r6, r1
 346 00ee F6B2     		uxtb	r6, r6
 347              	.LVL38:
 348              	.LBB136:
 349              	.LBB137:
1776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Weekday
1780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DU            LL_RTC_ALMA_GetWeekDay
1781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetWeekDay(RTC_TypeDef *RTCx)
1792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_DU) >> RTC_POSITION_ALMA_DU);
1794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm A time format (AM/24-hour or PM notation)
1798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_SetTimeFormat
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
1801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM, TimeFormat);
1808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm A time format (AM or PM notation)
1812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_GetTimeFormat
1813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
ARM GAS  /tmp/ccnIlCuV.s 			page 49


1817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTimeFormat(RTC_TypeDef *RTCx)
1819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_PM));
1821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Hours in BCD format
1825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
1826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_SetHour\n
1827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_SetHour
1828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU),
1835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_POSITION_ALMA_HT - 4U)) | ((Hours & 0x0FU) << RTC_POSITION_A
1836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Hours in BCD format
1840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
1841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_GetHour\n
1842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_GetHour
1843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetHour(RTC_TypeDef *RTCx)
1847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU));
1851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMAR_HT) >> RTC_POSITION_ALMA_HT) << 4U) | ((temp & RTC_ALRMAR_
1852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Minutes in BCD format
1856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MNT           LL_RTC_ALMA_SetMinute\n
1858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_SetMinute
1859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU),
1866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_POSITION_ALMA_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITI
1867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Minutes in BCD format
1871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
1872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MNT           LL_RTC_ALMA_GetMinute\n
1873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_GetMinute
ARM GAS  /tmp/ccnIlCuV.s 			page 50


1874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMinute(RTC_TypeDef *RTCx)
1878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU));
1882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMAR_MNT) >> RTC_POSITION_ALMA_MT) << 4U) | ((temp & RTC_ALRMAR
1883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM A Seconds in BCD format
1887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       ST            LL_RTC_ALMA_SetSecond\n
1889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_SetSecond
1890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
1895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU),
1897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_POSITION_ALMA_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITI
1898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM A Seconds in BCD format
1902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
1903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       ST            LL_RTC_ALMA_GetSecond\n
1904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_GetSecond
1905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSecond(RTC_TypeDef *RTCx)
1909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
1913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMAR_ST) >> RTC_POSITION_ALMA_ST) << 4U) | ((temp & RTC_ALRMAR_
1914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm A Time (hour, minute and second) in BCD format
1918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_ConfigTime\n
1919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HT            LL_RTC_ALMA_ConfigTime\n
1920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_ConfigTime\n
1921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNT           LL_RTC_ALMA_ConfigTime\n
1922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_ConfigTime\n
1923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       ST            LL_RTC_ALMA_ConfigTime\n
1924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_ConfigTime
1925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
ARM GAS  /tmp/ccnIlCuV.s 			page 51


1931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
1935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = Format12_24 | (((Hours & 0xF0U) << (RTC_POSITION_ALMA_HT - 4U)) | ((Hours & 0x0FU) << RTC_
 350              		.loc 2 1938 0
 351 00f0 4346     		mov	r3, r8
 352 00f2 1904     		lsls	r1, r3, #16
 353 00f4 4B46     		mov	r3, r9
 354 00f6 1943     		orrs	r1, r3
1939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_ALMA_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_A
 355              		.loc 2 1939 0
 356 00f8 5346     		mov	r3, r10
 357 00fa 1802     		lsls	r0, r3, #8
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_ALMA_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_A
 358              		.loc 2 1938 0
 359 00fc 0143     		orrs	r1, r0
 360 00fe 0E43     		orrs	r6, r1
 361              	.LVL39:
1940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_POSITION_ALMA_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITION_A
1941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM | RTC_ALRMAR_HT | RTC_ALRMAR_HU | RTC_ALRMAR_MNT | RTC_ALR
 362              		.loc 2 1942 0
 363 0100 E169     		ldr	r1, [r4, #28]
 364 0102 134B     		ldr	r3, .L15+12
 365 0104 1940     		ands	r1, r3
 366 0106 0E43     		orrs	r6, r1
 367              	.LVL40:
 368 0108 E661     		str	r6, [r4, #28]
 369              	.LVL41:
 370              	.L13:
 371              	.LBE137:
 372              	.LBE136:
 575:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 576:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Set ALARM mask */
 577:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_ALMA_SetMask(RTCx, RTC_AlarmStruct->AlarmMask);
 373              		.loc 1 577 0
 374 010a AB68     		ldr	r3, [r5, #8]
 375              	.LVL42:
 376              	.LBB138:
 377              	.LBB139:
1683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 378              		.loc 2 1683 0
 379 010c E269     		ldr	r2, [r4, #28]
 380 010e 1149     		ldr	r1, .L15+16
 381 0110 0A40     		ands	r2, r1
 382 0112 1343     		orrs	r3, r2
 383              	.LVL43:
 384 0114 E361     		str	r3, [r4, #28]
 385              	.LVL44:
 386              	.LBE139:
 387              	.LBE138:
 388              	.LBB140:
 389              	.LBB141:
ARM GAS  /tmp/ccnIlCuV.s 			page 52


1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 390              		.loc 2 1053 0
 391 0116 FF23     		movs	r3, #255
 392 0118 6362     		str	r3, [r4, #36]
 393              	.LVL45:
 394              	.LBE141:
 395              	.LBE140:
 578:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 579:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 580:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 581:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 582:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return SUCCESS;
 583:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 396              		.loc 1 583 0
 397 011a 0120     		movs	r0, #1
 398              		@ sp needed
 399              	.LVL46:
 400              	.LVL47:
 401 011c 1CBC     		pop	{r2, r3, r4}
 402 011e 9046     		mov	r8, r2
 403 0120 9946     		mov	r9, r3
 404 0122 A246     		mov	r10, r4
 405 0124 F0BD     		pop	{r4, r5, r6, r7, pc}
 406              	.LVL48:
 407              	.L14:
 566:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 408              		.loc 1 566 0
 409 0126 2A79     		ldrb	r2, [r5, #4]
 567:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 410              		.loc 1 567 0
 411 0128 6979     		ldrb	r1, [r5, #5]
 412 012a AB79     		ldrb	r3, [r5, #6]
 413              	.LVL49:
 414              	.LBB142:
 415              	.LBB143:
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_ALMA_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_A
 416              		.loc 2 1938 0
 417 012c 1204     		lsls	r2, r2, #16
 418              	.LVL50:
 419 012e 2868     		ldr	r0, [r5]
 420 0130 0243     		orrs	r2, r0
1939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_POSITION_ALMA_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITION_A
 421              		.loc 2 1939 0
 422 0132 0902     		lsls	r1, r1, #8
 423              	.LVL51:
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_ALMA_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_A
 424              		.loc 2 1938 0
 425 0134 0A43     		orrs	r2, r1
 426 0136 1343     		orrs	r3, r2
 427              	.LVL52:
 428              		.loc 2 1942 0
 429 0138 E269     		ldr	r2, [r4, #28]
 430 013a 0549     		ldr	r1, .L15+12
 431 013c 0A40     		ands	r2, r1
 432 013e 1343     		orrs	r3, r2
 433              	.LVL53:
 434 0140 E361     		str	r3, [r4, #28]
ARM GAS  /tmp/ccnIlCuV.s 			page 53


 435              	.LVL54:
 436 0142 E2E7     		b	.L13
 437              	.L16:
 438              		.align	2
 439              	.L15:
 440 0144 FFFFFFBF 		.word	-1073741825
 441 0148 FFFFFFC0 		.word	-1056964609
 442 014c FFFFFFF0 		.word	-251658241
 443 0150 808080FF 		.word	-8355712
 444 0154 7F7F7F7F 		.word	2139062143
 445              	.LBE143:
 446              	.LBE142:
 447              		.cfi_endproc
 448              	.LFE265:
 450              		.section	.text.LL_RTC_ALMB_Init,"ax",%progbits
 451              		.align	1
 452              		.global	LL_RTC_ALMB_Init
 453              		.syntax unified
 454              		.code	16
 455              		.thumb_func
 456              		.fpu softvfp
 458              	LL_RTC_ALMB_Init:
 459              	.LFB266:
 584:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 585:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 586:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set the RTC Alarm B.
 587:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 588:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         is disabled (@ref LL_RTC_ALMB_Disable function).
 589:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 590:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 591:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 592:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 593:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure that
 594:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *                         contains the alarm configuration parameters.
 595:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 596:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: ALARMB registers are configured
 597:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: ALARMB registers are not configured
 598:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 599:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_ALMB_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_AlarmTypeDef *RTC_Alarm
 600:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 460              		.loc 1 600 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	.LVL55:
 465 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 466              	.LCFI2:
 467              		.cfi_def_cfa_offset 20
 468              		.cfi_offset 4, -20
 469              		.cfi_offset 5, -16
 470              		.cfi_offset 6, -12
 471              		.cfi_offset 7, -8
 472              		.cfi_offset 14, -4
 473 0002 D646     		mov	lr, r10
 474 0004 4F46     		mov	r7, r9
 475 0006 4646     		mov	r6, r8
 476 0008 C0B5     		push	{r6, r7, lr}
ARM GAS  /tmp/ccnIlCuV.s 			page 54


 477              	.LCFI3:
 478              		.cfi_def_cfa_offset 32
 479              		.cfi_offset 8, -32
 480              		.cfi_offset 9, -28
 481              		.cfi_offset 10, -24
 482 000a 0400     		movs	r4, r0
 483 000c 0E00     		movs	r6, r1
 484 000e 1500     		movs	r5, r2
 601:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameters */
 602:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 603:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 604:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMB_MASK(RTC_AlarmStruct->AlarmMask));
 605:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMB_DATE_WEEKDAY_SEL(RTC_AlarmStruct->AlarmDateWeekDaySel));
 606:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 607:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 485              		.loc 1 607 0
 486 0010 0029     		cmp	r1, #0
 487 0012 1AD1     		bne	.L18
 488              	.LVL56:
 489              	.LBB144:
 490              	.LBB145:
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 491              		.loc 2 820 0
 492 0014 8368     		ldr	r3, [r0, #8]
 493              	.LVL57:
 494              	.LBE145:
 495              	.LBE144:
 608:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 609:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 496              		.loc 1 609 0
 497 0016 5B06     		lsls	r3, r3, #25
 498 0018 01D4     		bmi	.L20
 610:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 611:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(RTC_AlarmStruct->AlarmTime.Hours));
 612:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 613:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 614:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 615:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 616:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 499              		.loc 1 616 0
 500 001a 0023     		movs	r3, #0
 501 001c 1360     		str	r3, [r2]
 502              	.L20:
 503              	.LVL58:
 504              	.LBB146:
 505              	.LBB147:
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 506              		.loc 2 1064 0
 507 001e CA23     		movs	r3, #202
 508 0020 6362     		str	r3, [r4, #36]
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 509              		.loc 2 1065 0
 510 0022 773B     		subs	r3, r3, #119
 511 0024 6362     		str	r3, [r4, #36]
 512              	.LVL59:
 513              	.LBE147:
 514              	.LBE146:
ARM GAS  /tmp/ccnIlCuV.s 			page 55


 617:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_AlarmStruct->AlarmTime.Hours));
 618:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 619:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(RTC_AlarmStruct->AlarmTime.Minutes));
 620:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(RTC_AlarmStruct->AlarmTime.Seconds));
 621:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 622:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMB_DATEWEEKDAYSEL_DATE)
 623:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 624:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(RTC_AlarmStruct->AlarmDateWeekDay));
 625:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 626:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 627:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 628:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(RTC_AlarmStruct->AlarmDateWeekDay));
 629:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 630:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 631:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   else
 632:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 633:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 634:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 635:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 636:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 637:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 638:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 639:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 640:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 641:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 642:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 643:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 644:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Minutes)));
 645:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Seconds)));
 646:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 647:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMB_DATEWEEKDAYSEL_DATE)
 648:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 649:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 650:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 651:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 652:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 653:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 654:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 655:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 656:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 657:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 658:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 659:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 660:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Select weekday selection */
 661:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMB_DATEWEEKDAYSEL_DATE)
 515              		.loc 1 661 0
 516 0026 EB68     		ldr	r3, [r5, #12]
 517 0028 002B     		cmp	r3, #0
 518 002a 2AD1     		bne	.L22
 519              	.LVL60:
 520              	.LBB148:
 521              	.LBB149:
1943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
1947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
ARM GAS  /tmp/ccnIlCuV.s 			page 56


1948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * are available to get independently each parameter.
1949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_GetTime\n
1950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_GetTime\n
1951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNT           LL_RTC_ALMA_GetTime\n
1952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_GetTime\n
1953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       ST            LL_RTC_ALMA_GetTime\n
1954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_GetTime
1955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
1957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTime(RTC_TypeDef *RTCx)
1959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMA_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMA_GetMinute(RTCx) <
1961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm A Mask the most-significant bits starting at this bit
1965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note This register can be written only when ALRAE is reset in RTC_CR register,
1966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       or in initialization mode.
1967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     MASKSS        LL_RTC_ALMA_SetSubSecondMask
1968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask Value between Min_Data=0x00 and Max_Data=0xF
1970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
1973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS, Mask << RTC_POSITION_ALMA_MASKSS);
1975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm A Mask the most-significant bits starting at this bit
1979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     MASKSS        LL_RTC_ALMA_GetSubSecondMask
1980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xF
1982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecondMask(RTC_TypeDef *RTCx)
1984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS) >> RTC_POSITION_ALMA_MASKSS);
1986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
1988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
1989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm A Sub seconds value
1990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     SS            LL_RTC_ALMA_SetSubSecond
1991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
1993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
1994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
1995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
1996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
1997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_SS, Subsecond);
1998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
1999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm A Sub seconds value
2002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     SS            LL_RTC_ALMA_GetSubSecond
2003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
ARM GAS  /tmp/ccnIlCuV.s 			page 57


2005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecond(RTC_TypeDef *RTCx)
2007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_SS));
2009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
2013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMB ALARMB
2016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
2017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Alarm B
2021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ALRBE         LL_RTC_ALMB_Enable
2023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_Enable(RTC_TypeDef *RTCx)
2027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRBE);
2029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Alarm B
2033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           ALRBE         LL_RTC_ALMB_Disable
2035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_Disable(RTC_TypeDef *RTCx)
2039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRBE);
2041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Specify the Alarm B masks.
2045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       MSK4          LL_RTC_ALMB_SetMask\n
2046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK3          LL_RTC_ALMB_SetMask\n
2047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK2          LL_RTC_ALMB_SetMask\n
2048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK1          LL_RTC_ALMB_SetMask
2049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
2051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_NONE
2052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_DATEWEEKDAY
2053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_HOURS
2054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_MINUTES
2055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_SECONDS
2056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_ALL
2057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
2060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | RTC_ALRMBR_MSK1, M
ARM GAS  /tmp/ccnIlCuV.s 			page 58


2062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get the Alarm B masks.
2066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       MSK4          LL_RTC_ALMB_GetMask\n
2067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK3          LL_RTC_ALMB_GetMask\n
2068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK2          LL_RTC_ALMB_GetMask\n
2069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MSK1          LL_RTC_ALMB_GetMask
2070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
2072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_NONE
2073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_DATEWEEKDAY
2074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_HOURS
2075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_MINUTES
2076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_SECONDS
2077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_ALL
2078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetMask(RTC_TypeDef *RTCx)
2080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | RT
2082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable AlarmB Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
2086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       WDSEL         LL_RTC_ALMB_EnableWeekday
2087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_EnableWeekday(RTC_TypeDef *RTCx)
2091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMBR, RTC_ALRMBR_WDSEL);
2093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable AlarmB Week day selection (DU[3:0] represents the date )
2097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       WDSEL         LL_RTC_ALMB_DisableWeekday
2098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_DisableWeekday(RTC_TypeDef *RTCx)
2102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMBR, RTC_ALRMBR_WDSEL);
 522              		.loc 2 2103 0
 523 002c 236A     		ldr	r3, [r4, #32]
 524 002e 464A     		ldr	r2, .L28
 525              	.LVL61:
 526 0030 1340     		ands	r3, r2
 527 0032 2362     		str	r3, [r4, #32]
 528              	.LVL62:
 529              	.LBE149:
 530              	.LBE148:
 662:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 663:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Set the date for ALARM */
 664:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMB_DisableWeekday(RTCx);
 665:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 531              		.loc 1 665 0
 532 0034 002E     		cmp	r6, #0
ARM GAS  /tmp/ccnIlCuV.s 			page 59


 533 0036 0ED0     		beq	.L23
 666:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 667:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       LL_RTC_ALMB_SetDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 534              		.loc 1 667 0
 535 0038 2A7C     		ldrb	r2, [r5, #16]
 536              	.LVL63:
 537              	.LBB150:
 538              	.LBB151:
2104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Day in BCD format
2108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
2109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       DT            LL_RTC_ALMB_SetDay\n
2110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       DU            LL_RTC_ALMB_SetDay
2111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
2113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
2116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTC->ALRMBR, (RTC_ALRMBR_DT | RTC_ALRMBR_DU),
 539              		.loc 2 2117 0
 540 003a 4449     		ldr	r1, .L28+4
 541              	.LVL64:
 542 003c 0B6A     		ldr	r3, [r1, #32]
 543 003e 4448     		ldr	r0, .L28+8
 544              	.LVL65:
 545 0040 0340     		ands	r3, r0
 546 0042 1206     		lsls	r2, r2, #24
 547              	.LVL66:
 548 0044 1343     		orrs	r3, r2
 549 0046 0B62     		str	r3, [r1, #32]
 550              	.LVL67:
 551 0048 27E0     		b	.L24
 552              	.LVL68:
 553              	.L18:
 554              	.LBE151:
 555              	.LBE150:
 556              	.LBB152:
 557              	.LBB153:
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 558              		.loc 2 820 0
 559 004a 8368     		ldr	r3, [r0, #8]
 560              	.LVL69:
 561              	.LBE153:
 562              	.LBE152:
 633:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 563              		.loc 1 633 0
 564 004c 5B06     		lsls	r3, r3, #25
 565 004e E6D4     		bmi	.L20
 640:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 566              		.loc 1 640 0
 567 0050 0023     		movs	r3, #0
 568 0052 1360     		str	r3, [r2]
 569 0054 E3E7     		b	.L20
 570              	.LVL70:
ARM GAS  /tmp/ccnIlCuV.s 			page 60


 571              	.L23:
 668:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 669:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     else
 670:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 671:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       LL_RTC_ALMB_SetDay(RTCx, __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmDateWeekDay));
 572              		.loc 1 671 0
 573 0056 2F7C     		ldrb	r7, [r5, #16]
 574 0058 0A21     		movs	r1, #10
 575              	.LVL71:
 576 005a 3800     		movs	r0, r7
 577              	.LVL72:
 578 005c FFF7FEFF 		bl	__aeabi_uidiv
 579              	.LVL73:
 580 0060 0001     		lsls	r0, r0, #4
 581 0062 C3B2     		uxtb	r3, r0
 582 0064 9846     		mov	r8, r3
 583 0066 0A21     		movs	r1, #10
 584 0068 3800     		movs	r0, r7
 585 006a FFF7FEFF 		bl	__aeabi_uidivmod
 586              	.LVL74:
 587 006e 4346     		mov	r3, r8
 588 0070 1943     		orrs	r1, r3
 589              	.LVL75:
 590              	.LBB154:
 591              	.LBB155:
 592              		.loc 2 2117 0
 593 0072 364A     		ldr	r2, .L28+4
 594 0074 136A     		ldr	r3, [r2, #32]
 595 0076 3648     		ldr	r0, .L28+8
 596 0078 0340     		ands	r3, r0
 597 007a 0906     		lsls	r1, r1, #24
 598              	.LVL76:
 599 007c 1943     		orrs	r1, r3
 600 007e 1162     		str	r1, [r2, #32]
 601 0080 0BE0     		b	.L24
 602              	.LVL77:
 603              	.L22:
 604              	.LBE155:
 605              	.LBE154:
 606              	.LBB156:
 607              	.LBB157:
2092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 608              		.loc 2 2092 0
 609 0082 226A     		ldr	r2, [r4, #32]
 610              	.LVL78:
 611 0084 8023     		movs	r3, #128
 612 0086 DB05     		lsls	r3, r3, #23
 613 0088 1343     		orrs	r3, r2
 614 008a 2362     		str	r3, [r4, #32]
 615              	.LVL79:
 616              	.LBE157:
 617              	.LBE156:
 672:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 673:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 674:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   else
 675:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 676:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Set the week day for ALARM */
ARM GAS  /tmp/ccnIlCuV.s 			page 61


 677:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMB_EnableWeekday(RTCx);
 678:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMB_SetWeekDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 618              		.loc 1 678 0
 619 008c 2A7C     		ldrb	r2, [r5, #16]
 620              	.LVL80:
 621              	.LBB158:
 622              	.LBB159:
2118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_POSITION_ALMB_DT - 4U)) | ((Day & 0x0FU) << RTC_POSITION_ALMB_
2119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Day in BCD format
2123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       DT            LL_RTC_ALMB_GetDay\n
2125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       DU            LL_RTC_ALMB_GetDay
2126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetDay(RTC_TypeDef *RTCx)
2130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
2132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_DT | RTC_ALRMBR_DU));
2134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMBR_DT) >> RTC_POSITION_ALMB_DT) << 4U) | ((temp & RTC_ALRMBR_
2135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Weekday
2139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       DU            LL_RTC_ALMB_SetWeekDay
2140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
2142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
2152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_DU, WeekDay << RTC_POSITION_ALMB_DU);
 623              		.loc 2 2153 0
 624 008e 236A     		ldr	r3, [r4, #32]
 625 0090 3049     		ldr	r1, .L28+12
 626              	.LVL81:
 627 0092 0B40     		ands	r3, r1
 628 0094 1206     		lsls	r2, r2, #24
 629              	.LVL82:
 630 0096 1343     		orrs	r3, r2
 631 0098 2362     		str	r3, [r4, #32]
 632              	.LVL83:
 633              	.L24:
 634              	.LBE159:
 635              	.LBE158:
 679:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
ARM GAS  /tmp/ccnIlCuV.s 			page 62


 680:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 681:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Configure the Alarm register */
 682:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (RTC_Format != LL_RTC_FORMAT_BIN)
 636              		.loc 1 682 0
 637 009a 002E     		cmp	r6, #0
 638 009c 45D1     		bne	.L27
 683:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 684:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMB_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat, RTC_AlarmStruct->AlarmTime.
 685:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 686:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 687:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   else
 688:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 689:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_ALMB_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat,
 639              		.loc 1 689 0
 640 009e 2B68     		ldr	r3, [r5]
 641 00a0 9946     		mov	r9, r3
 690:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Hours),
 642              		.loc 1 690 0
 643 00a2 2F79     		ldrb	r7, [r5, #4]
 644 00a4 0A21     		movs	r1, #10
 645 00a6 3800     		movs	r0, r7
 646 00a8 FFF7FEFF 		bl	__aeabi_uidiv
 647              	.LVL84:
 648 00ac 0001     		lsls	r0, r0, #4
 649 00ae C6B2     		uxtb	r6, r0
 650              	.LVL85:
 651 00b0 0A21     		movs	r1, #10
 652 00b2 3800     		movs	r0, r7
 653 00b4 FFF7FEFF 		bl	__aeabi_uidivmod
 654              	.LVL86:
 655 00b8 0E43     		orrs	r6, r1
 656 00ba F3B2     		uxtb	r3, r6
 657 00bc 9846     		mov	r8, r3
 691:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Minutes),
 658              		.loc 1 691 0
 659 00be 6F79     		ldrb	r7, [r5, #5]
 660 00c0 0A21     		movs	r1, #10
 661 00c2 3800     		movs	r0, r7
 662 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 663              	.LVL87:
 664 00c8 0001     		lsls	r0, r0, #4
 665 00ca C6B2     		uxtb	r6, r0
 666 00cc 0A21     		movs	r1, #10
 667 00ce 3800     		movs	r0, r7
 668 00d0 FFF7FEFF 		bl	__aeabi_uidivmod
 669              	.LVL88:
 670 00d4 0E43     		orrs	r6, r1
 671 00d6 F3B2     		uxtb	r3, r6
 672 00d8 9A46     		mov	r10, r3
 692:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Seconds));
 673              		.loc 1 692 0
 674 00da AF79     		ldrb	r7, [r5, #6]
 675 00dc 0A21     		movs	r1, #10
 676 00de 3800     		movs	r0, r7
 677 00e0 FFF7FEFF 		bl	__aeabi_uidiv
 678              	.LVL89:
 679 00e4 0001     		lsls	r0, r0, #4
ARM GAS  /tmp/ccnIlCuV.s 			page 63


 680 00e6 C6B2     		uxtb	r6, r0
 681 00e8 0A21     		movs	r1, #10
 682 00ea 3800     		movs	r0, r7
 683 00ec FFF7FEFF 		bl	__aeabi_uidivmod
 684              	.LVL90:
 685 00f0 0E43     		orrs	r6, r1
 686 00f2 F6B2     		uxtb	r6, r6
 687              	.LVL91:
 688              	.LBB160:
 689              	.LBB161:
2154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Weekday
2158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       DU            LL_RTC_ALMB_GetWeekDay
2159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetWeekDay(RTC_TypeDef *RTCx)
2170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_DU) >> RTC_POSITION_ALMB_DU);
2172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B time format (AM/24-hour or PM notation)
2176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_SetTimeFormat
2177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
2179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
2184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_PM, TimeFormat);
2186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B time format (AM or PM notation)
2190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_GetTimeFormat
2191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetTimeFormat(RTC_TypeDef *RTCx)
2197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_PM));
2199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
ARM GAS  /tmp/ccnIlCuV.s 			page 64


2201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Hours in BCD format
2203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
2204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_SetHour\n
2205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_SetHour
2206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
2211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_HT | RTC_ALRMBR_HU),
2213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_POSITION_ALMB_HT - 4U)) | ((Hours & 0x0FU) << RTC_POSITION_A
2214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Hours in BCD format
2218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_GetHour\n
2220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_GetHour
2221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetHour(RTC_TypeDef *RTCx)
2225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
2227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_HT | RTC_ALRMBR_HU));
2229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMBR_HT) >> RTC_POSITION_ALMB_HT) << 4U) | ((temp & RTC_ALRMBR_
2230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Minutes in BCD format
2234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
2235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       MNT           LL_RTC_ALMB_SetMinute\n
2236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_SetMinute
2237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes between Min_Data=0x00 and Max_Data=0x59
2239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
2242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU),
2244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_POSITION_ALMB_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITI
2245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Minutes in BCD format
2249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       MNT           LL_RTC_ALMB_GetMinute\n
2251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_GetMinute
2252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetMinute(RTC_TypeDef *RTCx)
2256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
ARM GAS  /tmp/ccnIlCuV.s 			page 65


2258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU));
2260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMBR_MNT) >> RTC_POSITION_ALMB_MT) << 4U) | ((temp & RTC_ALRMBR
2261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set ALARM B Seconds in BCD format
2265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
2266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       ST            LL_RTC_ALMB_SetSecond\n
2267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_SetSecond
2268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
2273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_ST | RTC_ALRMBR_SU),
2275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_POSITION_ALMB_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITI
2276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get ALARM B Seconds in BCD format
2280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
2281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       ST            LL_RTC_ALMB_GetSecond\n
2282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_GetSecond
2283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSecond(RTC_TypeDef *RTCx)
2287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
2289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_ST | RTC_ALRMBR_SU));
2291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMBR_ST) >> RTC_POSITION_ALMB_ST) << 4U) | ((temp & RTC_ALRMBR_
2292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm B Time (hour, minute and second) in BCD format
2296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_ConfigTime\n
2297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HT            LL_RTC_ALMB_ConfigTime\n
2298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_ConfigTime\n
2299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNT           LL_RTC_ALMB_ConfigTime\n
2300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_ConfigTime\n
2301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       ST            LL_RTC_ALMB_ConfigTime\n
2302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_ConfigTime
2303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
2305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
2309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
2313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t temp = 0U;
ARM GAS  /tmp/ccnIlCuV.s 			page 66


2315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   temp = Format12_24 | (((Hours & 0xF0U) << (RTC_POSITION_ALMB_HT - 4U)) | ((Hours & 0x0FU) << RTC_
 690              		.loc 2 2316 0
 691 00f4 4346     		mov	r3, r8
 692 00f6 1904     		lsls	r1, r3, #16
 693 00f8 4B46     		mov	r3, r9
 694 00fa 1943     		orrs	r1, r3
2317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_ALMB_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_A
 695              		.loc 2 2317 0
 696 00fc 5346     		mov	r3, r10
 697 00fe 1802     		lsls	r0, r3, #8
2316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_ALMB_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_A
 698              		.loc 2 2316 0
 699 0100 0143     		orrs	r1, r0
 700 0102 0E43     		orrs	r6, r1
 701              	.LVL92:
2318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_POSITION_ALMB_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITION_A
2319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_PM| RTC_ALRMBR_HT | RTC_ALRMBR_HU | RTC_ALRMBR_MNT | RTC_ALRM
 702              		.loc 2 2320 0
 703 0104 216A     		ldr	r1, [r4, #32]
 704 0106 144B     		ldr	r3, .L28+16
 705 0108 1940     		ands	r1, r3
 706 010a 0E43     		orrs	r6, r1
 707              	.LVL93:
 708 010c 2662     		str	r6, [r4, #32]
 709              	.LVL94:
 710              	.L26:
 711              	.LBE161:
 712              	.LBE160:
 693:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 694:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Set ALARM mask */
 695:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_ALMB_SetMask(RTCx, RTC_AlarmStruct->AlarmMask);
 713              		.loc 1 695 0
 714 010e AB68     		ldr	r3, [r5, #8]
 715              	.LVL95:
 716              	.LBB162:
 717              	.LBB163:
2061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 718              		.loc 2 2061 0
 719 0110 226A     		ldr	r2, [r4, #32]
 720 0112 1249     		ldr	r1, .L28+20
 721 0114 0A40     		ands	r2, r1
 722 0116 1343     		orrs	r3, r2
 723              	.LVL96:
 724 0118 2362     		str	r3, [r4, #32]
 725              	.LVL97:
 726              	.LBE163:
 727              	.LBE162:
 728              	.LBB164:
 729              	.LBB165:
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 730              		.loc 2 1053 0
 731 011a FF23     		movs	r3, #255
 732 011c 6362     		str	r3, [r4, #36]
 733              	.LVL98:
 734              	.LBE165:
ARM GAS  /tmp/ccnIlCuV.s 			page 67


 735              	.LBE164:
 696:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 697:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 698:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 699:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 700:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return SUCCESS;
 701:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 736              		.loc 1 701 0
 737 011e 0120     		movs	r0, #1
 738              		@ sp needed
 739              	.LVL99:
 740              	.LVL100:
 741 0120 1CBC     		pop	{r2, r3, r4}
 742 0122 9046     		mov	r8, r2
 743 0124 9946     		mov	r9, r3
 744 0126 A246     		mov	r10, r4
 745 0128 F0BD     		pop	{r4, r5, r6, r7, pc}
 746              	.LVL101:
 747              	.L27:
 684:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 748              		.loc 1 684 0
 749 012a 2A79     		ldrb	r2, [r5, #4]
 685:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 750              		.loc 1 685 0
 751 012c 6979     		ldrb	r1, [r5, #5]
 752 012e AB79     		ldrb	r3, [r5, #6]
 753              	.LVL102:
 754              	.LBB166:
 755              	.LBB167:
2316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_ALMB_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_A
 756              		.loc 2 2316 0
 757 0130 1204     		lsls	r2, r2, #16
 758              	.LVL103:
 759 0132 2868     		ldr	r0, [r5]
 760 0134 0243     		orrs	r2, r0
2317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_POSITION_ALMB_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITION_A
 761              		.loc 2 2317 0
 762 0136 0902     		lsls	r1, r1, #8
 763              	.LVL104:
2316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_ALMB_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_A
 764              		.loc 2 2316 0
 765 0138 0A43     		orrs	r2, r1
 766 013a 1343     		orrs	r3, r2
 767              	.LVL105:
 768              		.loc 2 2320 0
 769 013c 226A     		ldr	r2, [r4, #32]
 770 013e 0649     		ldr	r1, .L28+16
 771 0140 0A40     		ands	r2, r1
 772 0142 1343     		orrs	r3, r2
 773              	.LVL106:
 774 0144 2362     		str	r3, [r4, #32]
 775              	.LVL107:
 776 0146 E2E7     		b	.L26
 777              	.L29:
 778              		.align	2
 779              	.L28:
 780 0148 FFFFFFBF 		.word	-1073741825
ARM GAS  /tmp/ccnIlCuV.s 			page 68


 781 014c 00280040 		.word	1073752064
 782 0150 FFFFFFC0 		.word	-1056964609
 783 0154 FFFFFFF0 		.word	-251658241
 784 0158 808080FF 		.word	-8355712
 785 015c 7F7F7F7F 		.word	2139062143
 786              	.LBE167:
 787              	.LBE166:
 788              		.cfi_endproc
 789              	.LFE266:
 791              		.section	.text.LL_RTC_ALMA_StructInit,"ax",%progbits
 792              		.align	1
 793              		.global	LL_RTC_ALMA_StructInit
 794              		.syntax unified
 795              		.code	16
 796              		.thumb_func
 797              		.fpu softvfp
 799              	LL_RTC_ALMA_StructInit:
 800              	.LFB267:
 702:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 703:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 704:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_AlarmTypeDef of ALARMA field to default value (Time = 00h:00mn:00s
 705:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         Day = 1st day of the month/Mask = all fields are masked).
 706:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure which will be initializ
 707:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval None
 708:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 709:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** void LL_RTC_ALMA_StructInit(LL_RTC_AlarmTypeDef *RTC_AlarmStruct)
 710:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 801              		.loc 1 710 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806              	.LVL108:
 711:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
 712:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.TimeFormat = LL_RTC_ALMA_TIME_FORMAT_AM;
 807              		.loc 1 712 0
 808 0000 0023     		movs	r3, #0
 809 0002 0360     		str	r3, [r0]
 713:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Hours      = 0U;
 810              		.loc 1 713 0
 811 0004 0371     		strb	r3, [r0, #4]
 714:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Minutes    = 0U;
 812              		.loc 1 714 0
 813 0006 4371     		strb	r3, [r0, #5]
 715:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Seconds    = 0U;
 814              		.loc 1 715 0
 815 0008 8371     		strb	r3, [r0, #6]
 716:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 717:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Alarm Day Settings : Day = 1st day of the month */
 718:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDaySel = LL_RTC_ALMA_DATEWEEKDAYSEL_DATE;
 816              		.loc 1 718 0
 817 000a C360     		str	r3, [r0, #12]
 719:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDay    = 1U;
 818              		.loc 1 719 0
 819 000c 0122     		movs	r2, #1
 820 000e 0274     		strb	r2, [r0, #16]
 720:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
ARM GAS  /tmp/ccnIlCuV.s 			page 69


 721:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
 722:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmMask           = LL_RTC_ALMA_MASK_NONE;
 821              		.loc 1 722 0
 822 0010 8360     		str	r3, [r0, #8]
 723:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 823              		.loc 1 723 0
 824              		@ sp needed
 825 0012 7047     		bx	lr
 826              		.cfi_endproc
 827              	.LFE267:
 829              		.section	.text.LL_RTC_ALMB_StructInit,"ax",%progbits
 830              		.align	1
 831              		.global	LL_RTC_ALMB_StructInit
 832              		.syntax unified
 833              		.code	16
 834              		.thumb_func
 835              		.fpu softvfp
 837              	LL_RTC_ALMB_StructInit:
 838              	.LFB268:
 724:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 725:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 726:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_AlarmTypeDef of ALARMA field to default value (Time = 00h:00mn:00s
 727:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         Day = 1st day of the month/Mask = all fields are masked).
 728:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure which will be initializ
 729:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval None
 730:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 731:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** void LL_RTC_ALMB_StructInit(LL_RTC_AlarmTypeDef *RTC_AlarmStruct)
 732:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 839              		.loc 1 732 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 844              	.LVL109:
 733:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
 734:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.TimeFormat = LL_RTC_ALMB_TIME_FORMAT_AM;
 845              		.loc 1 734 0
 846 0000 0023     		movs	r3, #0
 847 0002 0360     		str	r3, [r0]
 735:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Hours      = 0U;
 848              		.loc 1 735 0
 849 0004 0371     		strb	r3, [r0, #4]
 736:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Minutes    = 0U;
 850              		.loc 1 736 0
 851 0006 4371     		strb	r3, [r0, #5]
 737:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Seconds    = 0U;
 852              		.loc 1 737 0
 853 0008 8371     		strb	r3, [r0, #6]
 738:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 739:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Alarm Day Settings : Day = 1st day of the month */
 740:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDaySel = LL_RTC_ALMB_DATEWEEKDAYSEL_DATE;
 854              		.loc 1 740 0
 855 000a C360     		str	r3, [r0, #12]
 741:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDay    = 1U;
 856              		.loc 1 741 0
 857 000c 0122     		movs	r2, #1
 858 000e 0274     		strb	r2, [r0, #16]
ARM GAS  /tmp/ccnIlCuV.s 			page 70


 742:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 743:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
 744:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmMask           = LL_RTC_ALMB_MASK_NONE;
 859              		.loc 1 744 0
 860 0010 8360     		str	r3, [r0, #8]
 745:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 861              		.loc 1 745 0
 862              		@ sp needed
 863 0012 7047     		bx	lr
 864              		.cfi_endproc
 865              	.LFE268:
 867              		.section	.text.LL_RTC_EnterInitMode,"ax",%progbits
 868              		.align	1
 869              		.global	LL_RTC_EnterInitMode
 870              		.syntax unified
 871              		.code	16
 872              		.thumb_func
 873              		.fpu softvfp
 875              	LL_RTC_EnterInitMode:
 876              	.LFB269:
 746:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 747:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 748:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Enters the RTC Initialization mode.
 749:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
 750:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 751:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 752:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 753:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: RTC is in Init mode
 754:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: RTC is not in Init mode
 755:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 756:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_EnterInitMode(RTC_TypeDef *RTCx)
 757:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 877              		.loc 1 757 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 882              	.LVL110:
 883 0000 82B0     		sub	sp, sp, #8
 884              	.LCFI4:
 885              		.cfi_def_cfa_offset 8
 758:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   __IO uint32_t timeout = RTC_INITMODE_TIMEOUT;
 886              		.loc 1 758 0
 887 0002 FA23     		movs	r3, #250
 888 0004 9B00     		lsls	r3, r3, #2
 889 0006 0193     		str	r3, [sp, #4]
 890              	.LVL111:
 891              	.LBB168:
 892              	.LBB169:
2321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
2325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * are available to get independently each parameter.
2327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_GetTime\n
2328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_GetTime\n
ARM GAS  /tmp/ccnIlCuV.s 			page 71


2329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNT           LL_RTC_ALMB_GetTime\n
2330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_GetTime\n
2331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       ST            LL_RTC_ALMB_GetTime\n
2332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_GetTime
2333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetTime(RTC_TypeDef *RTCx)
2337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMB_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMB_GetMinute(RTCx) <
2339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm B Mask the most-significant bits starting at this bit
2343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note This register can be written only when ALRBE is reset in RTC_CR register,
2344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *       or in initialization mode.
2345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     MASKSS        LL_RTC_ALMB_SetSubSecondMask
2346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask Value between Min_Data=0x00 and Max_Data=0xF
2348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
2351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_MASKSS, Mask << RTC_POSITION_ALMB_MASKSS);
2353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B Mask the most-significant bits starting at this bit
2357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     MASKSS        LL_RTC_ALMB_GetSubSecondMask
2358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xF
2360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecondMask(RTC_TypeDef *RTCx)
2362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_MASKSS)  >> RTC_POSITION_ALMB_MASKSS);
2364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Alarm B Sub seconds value
2368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     SS            LL_RTC_ALMB_SetSubSecond
2369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
2371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
2374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_SS, Subsecond);
2376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B Sub seconds value
2380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     SS            LL_RTC_ALMB_GetSubSecond
2381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
2383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecond(RTC_TypeDef *RTCx)
2385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
ARM GAS  /tmp/ccnIlCuV.s 			page 72


2386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_SS));
2387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
2391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Timestamp Timestamp
2394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
2395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Timestamp
2399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           TSE           LL_RTC_TS_Enable
2401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Enable(RTC_TypeDef *RTCx)
2405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TSE);
2407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Timestamp
2411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           TSE           LL_RTC_TS_Disable
2413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Disable(RTC_TypeDef *RTCx)
2417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TSE);
2419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Time-stamp event active edge
2423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note TSE must be reset when TSEDGE is changed to avoid unwanted TSF setting
2425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           TSEDGE        LL_RTC_TS_SetActiveEdge
2426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Edge This parameter can be one of the following values:
2428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_SetActiveEdge(RTC_TypeDef *RTCx, uint32_t Edge)
2433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_TSEDGE, Edge);
2435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Time-stamp event active edge
2439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           TSEDGE        LL_RTC_TS_GetActiveEdge
2441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/ccnIlCuV.s 			page 73


2443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetActiveEdge(RTC_TypeDef *RTCx)
2447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_TSEDGE));
2449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp AM/PM notation (AM or 24-hour format)
2453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         PM            LL_RTC_TS_GetTimeFormat
2454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_AM
2457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_PM
2458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTimeFormat(RTC_TypeDef *RTCx)
2460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_PM));
2462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Hours in BCD format
2466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         HT            LL_RTC_TS_GetHour\n
2468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         HU            LL_RTC_TS_GetHour
2469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetHour(RTC_TypeDef *RTCx)
2473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_HT | RTC_TSTR_HU) >> RTC_POSITION_TS_HU);
2475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Minutes in BCD format
2479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         MNT           LL_RTC_TS_GetMinute\n
2481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         MNU           LL_RTC_TS_GetMinute
2482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMinute(RTC_TypeDef *RTCx)
2486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_MNT | RTC_TSTR_MNU) >> RTC_POSITION_TS_MNU);
2488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Seconds in BCD format
2492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
2493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         ST            LL_RTC_TS_GetSecond\n
2494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         SU            LL_RTC_TS_GetSecond
2495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSecond(RTC_TypeDef *RTCx)
2499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
ARM GAS  /tmp/ccnIlCuV.s 			page 74


2500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_ST | RTC_TSTR_SU));
2501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp time (hour, minute and second) in BCD format
2505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * are available to get independently each parameter.
2507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSTR         HT            LL_RTC_TS_GetTime\n
2508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         HU            LL_RTC_TS_GetTime\n
2509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         MNT           LL_RTC_TS_GetTime\n
2510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         MNU           LL_RTC_TS_GetTime\n
2511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         ST            LL_RTC_TS_GetTime\n
2512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSTR         SU            LL_RTC_TS_GetTime
2513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTime(RTC_TypeDef *RTCx)
2517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR,
2519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****                              RTC_TSTR_HT | RTC_TSTR_HU | RTC_TSTR_MNT | RTC_TSTR_MNU | RTC_TSTR_ST 
2520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Week day
2524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSDR         WDU           LL_RTC_TS_GetWeekDay
2525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetWeekDay(RTC_TypeDef *RTCx)
2536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU) >> RTC_POSITION_TS_WDU);
2538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Month in BCD format
2542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
2543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSDR         MT            LL_RTC_TS_GetMonth\n
2544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         MU            LL_RTC_TS_GetMonth
2545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
2548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
2549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
2550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
2551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
2552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
2553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
2554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
2555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
2556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
ARM GAS  /tmp/ccnIlCuV.s 			page 75


2557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
2558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
2559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMonth(RTC_TypeDef *RTCx)
2561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_MT | RTC_TSDR_MU) >> RTC_POSITION_TS_MU);
2563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp Day in BCD format
2567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSDR         DT            LL_RTC_TS_GetDay\n
2569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         DU            LL_RTC_TS_GetDay
2570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDay(RTC_TypeDef *RTCx)
2574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_DT | RTC_TSDR_DU));
2576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Timestamp date (WeekDay, Day and Month) in BCD format
2580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_MONTH,
2581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
2582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSDR         WDU           LL_RTC_TS_GetDate\n
2583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         MT            LL_RTC_TS_GetDate\n
2584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         MU            LL_RTC_TS_GetDate\n
2585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         DT            LL_RTC_TS_GetDate\n
2586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TSDR         DU            LL_RTC_TS_GetDate
2587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Combination of Weekday, Day and Month
2589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDate(RTC_TypeDef *RTCx)
2591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU | RTC_TSDR_MT | RTC_TSDR_MU | RTC_TSDR_DT | R
2593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get time-stamp sub second value
2597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TSSSR        SS            LL_RTC_TS_GetSubSecond
2598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
2600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSubSecond(RTC_TypeDef *RTCx)
2602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSSSR, RTC_TSSSR_SS));
2604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPTS)
2607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Activate timestamp on tamper detection event
2609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPTS        LL_RTC_TS_EnableOnTamper
2610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_EnableOnTamper(RTC_TypeDef *RTCx)
ARM GAS  /tmp/ccnIlCuV.s 			page 76


2614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPTS);
2616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable timestamp on tamper detection event
2620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPTS        LL_RTC_TS_DisableOnTamper
2621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_DisableOnTamper(RTC_TypeDef *RTCx)
2625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPTS);
2627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPTS */
2629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
2632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Tamper Tamper
2635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
2636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx input detection
2640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1E        LL_RTC_TAMPER_Enable\n
2641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2E        LL_RTC_TAMPER_Enable\n
2642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3E        LL_RTC_TAMPER_Enable
2643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1 (*)
2646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2 
2647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_3 (*)
2648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         
2649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Enable(RTC_TypeDef *RTCx, uint32_t Tamper)
2653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
2655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMPx input detection
2659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1E        LL_RTC_TAMPER_Disable\n
2660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2E        LL_RTC_TAMPER_Disable\n
2661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3E        LL_RTC_TAMPER_Disable
2662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1 (*)
2665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2 
2666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_3 (*)
2667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         
2668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
ARM GAS  /tmp/ccnIlCuV.s 			page 77


2671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Disable(RTC_TypeDef *RTCx, uint32_t Tamper)
2672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
2674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Tamper mask flag
2678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Associated Tamper IT must not enabled when tamper mask is set.
2679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1MF       LL_RTC_TAMPER_EnableMask\n
2680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2MF       LL_RTC_TAMPER_EnableMask\n
2681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3MF       LL_RTC_TAMPER_EnableMask
2682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
2684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER1 (*)
2685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER2 
2686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER3 (*)
2687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         
2688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableMask(RTC_TypeDef *RTCx, uint32_t Mask)
2692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Mask);
2694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Tamper mask flag
2698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1MF       LL_RTC_TAMPER_DisableMask\n
2699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2MF       LL_RTC_TAMPER_DisableMask\n
2700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3MF       LL_RTC_TAMPER_DisableMask
2701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
2703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER1 (*)
2704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER2 
2705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER3 (*)
2706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         
2707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableMask(RTC_TypeDef *RTCx, uint32_t Mask)
2711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Mask);
2713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable backup register erase after Tamper event detection
2717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1NOERASE  LL_RTC_TAMPER_EnableEraseBKP\n
2718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2NOERASE  LL_RTC_TAMPER_EnableEraseBKP\n
2719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3NOERASE  LL_RTC_TAMPER_EnableEraseBKP
2720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER1 (*)
2723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER2 
2724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER3 (*)
2725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         
2726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
ARM GAS  /tmp/ccnIlCuV.s 			page 78


2728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableEraseBKP(RTC_TypeDef *RTCx, uint32_t Tamper)
2730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
2732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable backup register erase after Tamper event detection
2736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1NOERASE  LL_RTC_TAMPER_DisableEraseBKP\n
2737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2NOERASE  LL_RTC_TAMPER_DisableEraseBKP\n
2738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3NOERASE  LL_RTC_TAMPER_DisableEraseBKP
2739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER1 (*)
2742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER2 
2743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER3 (*)
2744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         
2745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableEraseBKP(RTC_TypeDef *RTCx, uint32_t Tamper)
2749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
2751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPPUDIS)
2754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable RTC_TAMPx pull-up disable (Disable precharge of RTC_TAMPx pins)
2756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPUDIS     LL_RTC_TAMPER_DisablePullUp
2757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisablePullUp(RTC_TypeDef *RTCx)
2761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPUDIS);
2763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx pull-up disable ( Precharge RTC_TAMPx pins before sampling)
2767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPUDIS     LL_RTC_TAMPER_EnablePullUp
2768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnablePullUp(RTC_TypeDef *RTCx)
2772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPUDIS);
2774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPPUDIS */
2776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPPRCH)
2778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx precharge duration
2780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPRCH      LL_RTC_TAMPER_SetPrecharge
2781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Duration This parameter can be one of the following values:
2783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
2784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
ARM GAS  /tmp/ccnIlCuV.s 			page 79


2785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
2786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
2787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetPrecharge(RTC_TypeDef *RTCx, uint32_t Duration)
2790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPPRCH, Duration);
2792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx precharge duration
2796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPRCH      LL_RTC_TAMPER_GetPrecharge
2797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
2800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
2801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
2802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
2803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetPrecharge(RTC_TypeDef *RTCx)
2805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPRCH));
2807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPPRCH */
2809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPFLT)
2811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx filter count
2813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFLT       LL_RTC_TAMPER_SetFilterCount
2814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  FilterCount This parameter can be one of the following values:
2816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
2817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
2818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
2819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
2820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetFilterCount(RTC_TypeDef *RTCx, uint32_t FilterCount)
2823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPFLT, FilterCount);
2825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx filter count
2829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFLT       LL_RTC_TAMPER_GetFilterCount
2830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
2833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
2834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
2835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
2836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetFilterCount(RTC_TypeDef *RTCx)
2838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPFLT));
2840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPFLT */
ARM GAS  /tmp/ccnIlCuV.s 			page 80


2842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPFREQ)
2844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Tamper sampling frequency
2846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFREQ      LL_RTC_TAMPER_SetSamplingFreq
2847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  SamplingFreq This parameter can be one of the following values:
2849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
2850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
2851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
2852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
2853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
2854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
2855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
2856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
2857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetSamplingFreq(RTC_TypeDef *RTCx, uint32_t SamplingFreq)
2860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPFREQ, SamplingFreq);
2862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Tamper sampling frequency
2866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFREQ      LL_RTC_TAMPER_GetSamplingFreq
2867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
2870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
2871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
2872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
2873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
2874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
2875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
2876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
2877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetSamplingFreq(RTC_TypeDef *RTCx)
2879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPFREQ));
2881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPFREQ */
2883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Active level for Tamper input
2886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1TRG      LL_RTC_TAMPER_EnableActiveLevel\n
2887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2TRG      LL_RTC_TAMPER_EnableActiveLevel\n
2888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3TRG      LL_RTC_TAMPER_EnableActiveLevel
2889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 (*)
2892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2 
2893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP3 (*)
2894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         
2895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
ARM GAS  /tmp/ccnIlCuV.s 			page 81


2899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
2901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Active level for Tamper input
2905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1TRG      LL_RTC_TAMPER_DisableActiveLevel\n
2906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP2TRG      LL_RTC_TAMPER_DisableActiveLevel\n
2907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         TAMPCR       TAMP3TRG      LL_RTC_TAMPER_DisableActiveLevel
2908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 (*)
2911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2 
2912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP3 (*)
2913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         
2914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
2918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
2920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
2924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
2927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Wakeup Wakeup
2928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
2929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Enable Wakeup timer
2933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_Enable
2935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Enable(RTC_TypeDef *RTCx)
2939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_WUTE);
2941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Disable Wakeup timer
2945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_Disable
2947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Disable(RTC_TypeDef *RTCx)
2951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_WUTE);
2953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
ARM GAS  /tmp/ccnIlCuV.s 			page 82


2956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Check if Wakeup timer is enabled or not
2957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_IsEnabled
2958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_IsEnabled(RTC_TypeDef *RTCx)
2962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_WUTE) == (RTC_CR_WUTE));
2964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Select Wakeup clock
2968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Bit can be written only when RTC_CR WUTE bit = 0 and RTC_ISR WUTWF bit = 1
2970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUCKSEL       LL_RTC_WAKEUP_SetClock
2971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  WakeupClock This parameter can be one of the following values:
2973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
2974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
2975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
2976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
2977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
2978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
2979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
2980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetClock(RTC_TypeDef *RTCx, uint32_t WakeupClock)
2982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
2983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_WUCKSEL, WakeupClock);
2984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
2985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
2986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
2987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Wakeup clock
2988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           WUCKSEL       LL_RTC_WAKEUP_GetClock
2989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
2992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
2993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
2994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
2995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
2996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
2997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
2998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetClock(RTC_TypeDef *RTCx)
2999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_WUCKSEL));
3001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Wakeup auto-reload value
3005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Bit can be written only when WUTWF is set to 1 in RTC_ISR
3006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll WUTR         WUT           LL_RTC_WAKEUP_SetAutoReload
3007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Value Value between Min_Data=0x00 and Max_Data=0xFFFF
3009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetAutoReload(RTC_TypeDef *RTCx, uint32_t Value)
3012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
ARM GAS  /tmp/ccnIlCuV.s 			page 83


3013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->WUTR, RTC_WUTR_WUT, Value);
3014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Wakeup auto-reload value
3018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll WUTR         WUT           LL_RTC_WAKEUP_GetAutoReload
3019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
3021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetAutoReload(RTC_TypeDef *RTCx)
3023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->WUTR, RTC_WUTR_WUT));
3025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
3029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
3031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_BACKUP_SUPPORT)
3033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Backup_Registers Backup_Registers
3034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
3035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Writes a data in a specified RTC Backup data register.
3039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll BKPxR        BKP           LL_RTC_BAK_SetRegister
3040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
3042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
3043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
3044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
3045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
3046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
3047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Data Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
3048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_BAK_SetRegister(RTC_TypeDef *RTCx, uint32_t BackupRegister, uint32_t Da
3051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t tmp = 0U;
3053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   tmp = (uint32_t)(&(RTCx->BKP0R));
3055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
3056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   /* Write the specified register */
3058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
3059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Reads data from the specified RTC Backup data Register.
3063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll BKPxR        BKP           LL_RTC_BAK_GetRegister
3064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
3066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
3067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
3068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
3069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
ARM GAS  /tmp/ccnIlCuV.s 			page 84


3070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
3071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
3072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_BAK_GetRegister(RTC_TypeDef *RTCx, uint32_t BackupRegister)
3074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   register uint32_t tmp = 0U;
3076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   tmp = (uint32_t)(&(RTCx->BKP0R));
3078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
3079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   /* Read the specified register */
3081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (*(__IO uint32_t *)tmp);
3082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
3086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_BACKUP_SUPPORT */
3088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Calibration Calibration
3090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
3091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Calibration output frequency (1 Hz or 512 Hz)
3095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Bits are write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           COE           LL_RTC_CAL_SetOutputFreq\n
3097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         CR           COSEL         LL_RTC_CAL_SetOutputFreq
3098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Frequency This parameter can be one of the following values:
3100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_NONE
3101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_1HZ
3102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_512HZ
3103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetOutputFreq(RTC_TypeDef *RTCx, uint32_t Frequency)
3106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_COE | RTC_CR_COSEL, Frequency);
3108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Calibration output frequency (1 Hz or 512 Hz)
3112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CR           COE           LL_RTC_CAL_GetOutputFreq\n
3113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         CR           COSEL         LL_RTC_CAL_GetOutputFreq
3114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_NONE
3117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_1HZ
3118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_512HZ
3119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetOutputFreq(RTC_TypeDef *RTCx)
3121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_COE | RTC_CR_COSEL));
3123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Insert or not One RTCCLK pulse every 2exp11 pulses (frequency increased by 488.5 ppm)
ARM GAS  /tmp/ccnIlCuV.s 			page 85


3127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note Bit can be written only when RECALPF is set to 0 in RTC_ISR
3129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CALR         CALP          LL_RTC_CAL_SetPulse
3130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Pulse This parameter can be one of the following values:
3132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_INSERTPULSE_NONE
3133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_INSERTPULSE_SET
3134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetPulse(RTC_TypeDef *RTCx, uint32_t Pulse)
3137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALP, Pulse);
3139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Check if one RTCCLK has been inserted or not every 2exp11 pulses (frequency increased b
3143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CALR         CALP          LL_RTC_CAL_IsPulseInserted
3144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_IsPulseInserted(RTC_TypeDef *RTCx)
3148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CALR, RTC_CALR_CALP) == (RTC_CALR_CALP));
3150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set the calibration cycle period
3154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0 in RTC_ISR
3156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CALR         CALW8         LL_RTC_CAL_SetPeriod\n
3157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         CALR         CALW16        LL_RTC_CAL_SetPeriod
3158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  Period This parameter can be one of the following values:
3160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_32SEC
3161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_16SEC
3162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_8SEC
3163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetPeriod(RTC_TypeDef *RTCx, uint32_t Period)
3166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALW8 | RTC_CALR_CALW16, Period);
3168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get the calibration cycle period
3172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CALR         CALW8         LL_RTC_CAL_GetPeriod\n
3173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         CALR         CALW16        LL_RTC_CAL_GetPeriod
3174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_32SEC
3177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_16SEC
3178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_8SEC
3179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetPeriod(RTC_TypeDef *RTCx)
3181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALR, RTC_CALR_CALW8 | RTC_CALR_CALW16));
3183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
ARM GAS  /tmp/ccnIlCuV.s 			page 86


3184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Set Calibration minus
3187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0 in RTC_ISR
3189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CALR         CALM          LL_RTC_CAL_SetMinus
3190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  CalibMinus Value between Min_Data=0x00 and Max_Data=0x1FF
3192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetMinus(RTC_TypeDef *RTCx, uint32_t CalibMinus)
3195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALM, CalibMinus);
3197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Calibration minus
3201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll CALR         CALM          LL_RTC_CAL_GetMinus
3202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data= 0x1FF
3204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetMinus(RTC_TypeDef *RTCx)
3206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALR, RTC_CALR_CALM));
3208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @}
3212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_FLAG_Management FLAG_Management
3215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @{
3216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Recalibration pending Flag
3220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          RECALPF       LL_RTC_IsActiveFlag_RECALP
3221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RECALP(RTC_TypeDef *RTCx)
3225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_RECALPF) == (RTC_ISR_RECALPF));
3227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
3230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_TAMP3 detection flag
3232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP3F        LL_RTC_IsActiveFlag_TAMP3
3233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP3(RTC_TypeDef *RTCx)
3237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP3F) == (RTC_ISR_TAMP3F));
3239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
ARM GAS  /tmp/ccnIlCuV.s 			page 87


3241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
3243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_TAMP2 detection flag
3245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP2F        LL_RTC_IsActiveFlag_TAMP2
3246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP2(RTC_TypeDef *RTCx)
3250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP2F) == (RTC_ISR_TAMP2F));
3252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
3254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
3256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get RTC_TAMP1 detection flag
3258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP1F        LL_RTC_IsActiveFlag_TAMP1
3259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP1(RTC_TypeDef *RTCx)
3263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP1F) == (RTC_ISR_TAMP1F));
3265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
3267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Time-stamp overflow flag
3270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TSOVF         LL_RTC_IsActiveFlag_TSOV
3271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TSOV(RTC_TypeDef *RTCx)
3275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TSOVF) == (RTC_ISR_TSOVF));
3277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Time-stamp flag
3281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TSF           LL_RTC_IsActiveFlag_TS
3282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TS(RTC_TypeDef *RTCx)
3286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TSF) == (RTC_ISR_TSF));
3288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
3291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Wakeup timer flag
3293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          WUTF          LL_RTC_IsActiveFlag_WUT
3294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_WUT(RTC_TypeDef *RTCx)
ARM GAS  /tmp/ccnIlCuV.s 			page 88


3298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_WUTF) == (RTC_ISR_WUTF));
3300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
3302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm B flag
3305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          ALRBF         LL_RTC_IsActiveFlag_ALRB
3306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRB(RTC_TypeDef *RTCx)
3310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_ALRBF) == (RTC_ISR_ALRBF));
3312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Alarm A flag
3316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          ALRAF         LL_RTC_IsActiveFlag_ALRA
3317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRA(RTC_TypeDef *RTCx)
3321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_ALRAF) == (RTC_ISR_ALRAF));
3323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
3326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP3 detection flag
3328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP3F        LL_RTC_ClearFlag_TAMP3
3329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP3(RTC_TypeDef *RTCx)
3333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP3F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
3335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
3337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
3339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP2 detection flag
3341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP2F        LL_RTC_ClearFlag_TAMP2
3342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP2(RTC_TypeDef *RTCx)
3346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP2F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
3348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
3350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
3352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP1 detection flag
3354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP1F        LL_RTC_ClearFlag_TAMP1
ARM GAS  /tmp/ccnIlCuV.s 			page 89


3355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP1(RTC_TypeDef *RTCx)
3359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP1F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
3361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
3363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear Time-stamp overflow flag
3366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TSOVF         LL_RTC_ClearFlag_TSOV
3367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TSOV(RTC_TypeDef *RTCx)
3371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TSOVF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
3373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear Time-stamp flag
3377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          TSF           LL_RTC_ClearFlag_TS
3378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TS(RTC_TypeDef *RTCx)
3382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TSF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT))
3384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
3387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear Wakeup timer flag
3389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          WUTF          LL_RTC_ClearFlag_WUT
3390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_WUT(RTC_TypeDef *RTCx)
3394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_WUTF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT)
3396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
3398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear Alarm B flag
3401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          ALRBF         LL_RTC_ClearFlag_ALRB
3402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRB(RTC_TypeDef *RTCx)
3406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_ALRBF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
3408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear Alarm A flag
ARM GAS  /tmp/ccnIlCuV.s 			page 90


3412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          ALRAF         LL_RTC_ClearFlag_ALRA
3413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRA(RTC_TypeDef *RTCx)
3417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_ALRAF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
3419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Initialization flag
3423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          INITF         LL_RTC_IsActiveFlag_INIT
3424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_INIT(RTC_TypeDef *RTCx)
3428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_INITF) == (RTC_ISR_INITF));
 893              		.loc 2 3429 0
 894 0008 C368     		ldr	r3, [r0, #12]
 895              	.LVL112:
 896              	.LBE169:
 897              	.LBE168:
 759:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
 760:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   uint32_t tmp = 0U;
 761:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 762:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameter */
 763:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 764:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 765:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check if the Initialization mode is set */
 766:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (LL_RTC_IsActiveFlag_INIT(RTCx) == 0U)
 898              		.loc 1 766 0
 899 000a 5B06     		lsls	r3, r3, #25
 900 000c 1ED4     		bmi	.L38
 901              	.LVL113:
 902              	.LBB170:
 903              	.LBB171:
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 904              		.loc 2 896 0
 905 000e 0123     		movs	r3, #1
 906 0010 5B42     		rsbs	r3, r3, #0
 907 0012 C360     		str	r3, [r0, #12]
 908              	.LVL114:
 909              	.LBE171:
 910              	.LBE170:
 911              	.LBB172:
 912              	.LBB173:
 913              		.loc 2 3429 0
 914 0014 C268     		ldr	r2, [r0, #12]
 915 0016 4133     		adds	r3, r3, #65
 916 0018 1340     		ands	r3, r2
 917 001a 5A1E     		subs	r2, r3, #1
 918 001c 9341     		sbcs	r3, r3, r2
 919              	.LVL115:
 920              	.LBE173:
 921              	.LBE172:
 759:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
ARM GAS  /tmp/ccnIlCuV.s 			page 91


 922              		.loc 1 759 0
 923 001e 0121     		movs	r1, #1
 924              	.LVL116:
 925              	.L34:
 767:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 768:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Set the Initialization mode */
 769:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_EnableInitMode(RTCx);
 770:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 771:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 772:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_INIT(RTCx);
 773:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     while ((timeout != 0U) && (tmp != 1U))
 926              		.loc 1 773 0
 927 0020 019A     		ldr	r2, [sp, #4]
 928 0022 002A     		cmp	r2, #0
 929 0024 13D0     		beq	.L33
 930              		.loc 1 773 0 is_stmt 0 discriminator 1
 931 0026 012B     		cmp	r3, #1
 932 0028 11D0     		beq	.L33
 933              	.LBB174:
 934              	.LBB175:
 935              		.file 3 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @file    stm32l0xx_ll_cortex.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @brief   Header file of CORTEX LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   @verbatim
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ==============================================================================
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****                      ##### How to use this driver #####
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****     [..]
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****     The LL CORTEX driver contains a set of generic APIs that can be
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****     used by user:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****       (+) SYSTICK configuration used by @ref LL_mDelay and @ref LL_Init1msTick
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****           functions
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****       (+) Low power mode configuration (SCB register of Cortex-MCU)
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****       (+) MPU API to configure and enable regions
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****       (+) API to access to MCU info (CPUID register)
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   @endverbatim
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ******************************************************************************
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @attention
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * Redistribution and use in source and binary forms, with or without modification,
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * are permitted provided that the following conditions are met:
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer.
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer in the documentation
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      and/or other materials provided with the distribution.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      may be used to endorse or promote products derived from this software
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      without specific prior written permission.
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  /tmp/ccnIlCuV.s 			page 92


  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ******************************************************************************
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #ifndef __STM32L0xx_LL_CORTEX_H
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define __STM32L0xx_LL_CORTEX_H
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #ifdef __cplusplus
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** extern "C" {
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #endif
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Includes ------------------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #include "stm32l0xx.h"
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @addtogroup STM32L0xx_LL_Driver
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL CORTEX
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Private types -------------------------------------------------------------*/
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Private variables ---------------------------------------------------------*/
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Private constants ---------------------------------------------------------*/
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Private macros ------------------------------------------------------------*/
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Exported types ------------------------------------------------------------*/
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Exported constants --------------------------------------------------------*/
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Constants CORTEX Exported Constants
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CLKSOURCE_HCLK SYSTICK Clock Source
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK_DIV8     ((uint32_t)0x00000000U)                 /*!< AHB clock d
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK          ((uint32_t)SysTick_CTRL_CLKSOURCE_Msk) /*!< AHB clock se
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #if __MPU_PRESENT
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CTRL_HFNMI_PRIVDEF MPU Control
ARM GAS  /tmp/ccnIlCuV.s 			page 93


  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF_NONE     ((uint32_t)0x00000000U)                            /*!< 
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_CTRL_HARDFAULT_NMI          MPU_CTRL_HFNMIENA_Msk                             /*!< E
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_CTRL_PRIVILEGED_DEFAULT     MPU_CTRL_PRIVDEFENA_Msk                           /*!< E
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF          (MPU_CTRL_HFNMIENA_Msk | MPU_CTRL_PRIVDEFENA_Msk) /*!< E
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION MPU Region Number
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER0              ((uint32_t)0x00U) /*!< REGION Number 0 */
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER1              ((uint32_t)0x01U) /*!< REGION Number 1 */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER2              ((uint32_t)0x02U) /*!< REGION Number 2 */
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER3              ((uint32_t)0x03U) /*!< REGION Number 3 */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER4              ((uint32_t)0x04U) /*!< REGION Number 4 */
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER5              ((uint32_t)0x05U) /*!< REGION Number 5 */
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER6              ((uint32_t)0x06U) /*!< REGION Number 6 */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER7              ((uint32_t)0x07U) /*!< REGION Number 7 */
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_SIZE MPU Region Size
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32B             ((uint32_t)(0x04U << MPU_RASR_SIZE_Pos)) /*!< 32B Size o
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64B             ((uint32_t)(0x05U << MPU_RASR_SIZE_Pos)) /*!< 64B Size o
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128B            ((uint32_t)(0x06U << MPU_RASR_SIZE_Pos)) /*!< 128B Size 
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256B            ((uint32_t)(0x07U << MPU_RASR_SIZE_Pos)) /*!< 256B Size 
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512B            ((uint32_t)(0x08U << MPU_RASR_SIZE_Pos)) /*!< 512B Size 
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1KB             ((uint32_t)(0x09U << MPU_RASR_SIZE_Pos)) /*!< 1KB Size o
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2KB             ((uint32_t)(0x0AU << MPU_RASR_SIZE_Pos)) /*!< 2KB Size o
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4KB             ((uint32_t)(0x0BU << MPU_RASR_SIZE_Pos)) /*!< 4KB Size o
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8KB             ((uint32_t)(0x0CU << MPU_RASR_SIZE_Pos)) /*!< 8KB Size o
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16KB            ((uint32_t)(0x0DU << MPU_RASR_SIZE_Pos)) /*!< 16KB Size 
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32KB            ((uint32_t)(0x0EU << MPU_RASR_SIZE_Pos)) /*!< 32KB Size 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64KB            ((uint32_t)(0x0FU << MPU_RASR_SIZE_Pos)) /*!< 64KB Size 
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128KB           ((uint32_t)(0x10U << MPU_RASR_SIZE_Pos)) /*!< 128KB Size
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256KB           ((uint32_t)(0x11U << MPU_RASR_SIZE_Pos)) /*!< 256KB Size
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512KB           ((uint32_t)(0x12U << MPU_RASR_SIZE_Pos)) /*!< 512KB Size
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1MB             ((uint32_t)(0x13U << MPU_RASR_SIZE_Pos)) /*!< 1MB Size o
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2MB             ((uint32_t)(0x14U << MPU_RASR_SIZE_Pos)) /*!< 2MB Size o
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4MB             ((uint32_t)(0x15U << MPU_RASR_SIZE_Pos)) /*!< 4MB Size o
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8MB             ((uint32_t)(0x16U << MPU_RASR_SIZE_Pos)) /*!< 8MB Size o
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16MB            ((uint32_t)(0x17U << MPU_RASR_SIZE_Pos)) /*!< 16MB Size 
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32MB            ((uint32_t)(0x18U << MPU_RASR_SIZE_Pos)) /*!< 32MB Size 
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64MB            ((uint32_t)(0x19U << MPU_RASR_SIZE_Pos)) /*!< 64MB Size 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128MB           ((uint32_t)(0x1AU << MPU_RASR_SIZE_Pos)) /*!< 128MB Size
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256MB           ((uint32_t)(0x1BU << MPU_RASR_SIZE_Pos)) /*!< 256MB Size
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512MB           ((uint32_t)(0x1CU << MPU_RASR_SIZE_Pos)) /*!< 512MB Size
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1GB             ((uint32_t)(0x1DU << MPU_RASR_SIZE_Pos)) /*!< 1GB Size o
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2GB             ((uint32_t)(0x1EU << MPU_RASR_SIZE_Pos)) /*!< 2GB Size o
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4GB             ((uint32_t)(0x1FU << MPU_RASR_SIZE_Pos)) /*!< 4GB Size o
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
ARM GAS  /tmp/ccnIlCuV.s 			page 94


 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_PRIVILEDGES MPU Region Privileges
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NO_ACCESS            ((uint32_t)(0x00U << MPU_RASR_AP_Pos)) /*!< No access*/
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW              ((uint32_t)(0x01U << MPU_RASR_AP_Pos)) /*!< RW privilege
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW_URO          ((uint32_t)(0x02U << MPU_RASR_AP_Pos)) /*!< RW privilege
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_FULL_ACCESS          ((uint32_t)(0x03U << MPU_RASR_AP_Pos)) /*!< RW privilege
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO              ((uint32_t)(0x05U << MPU_RASR_AP_Pos)) /*!< RO privilege
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO_URO          ((uint32_t)(0x06U << MPU_RASR_AP_Pos)) /*!< RO privilege
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_TEX MPU TEX Level
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL0                  ((uint32_t)(0x00U << MPU_RASR_TEX_Pos)) /*!< b000 for TE
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL1                  ((uint32_t)(0x01U << MPU_RASR_TEX_Pos)) /*!< b001 for TE
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL2                  ((uint32_t)(0x02U << MPU_RASR_TEX_Pos)) /*!< b010 for TE
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL4                  ((uint32_t)(0x04U << MPU_RASR_TEX_Pos)) /*!< b100 for TE
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_INSTRUCTION_ACCESS MPU Instruction Access
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_ENABLE   ((uint32_t)0x00U) /*!< Instruction fetches enabled */
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_DISABLE  MPU_RASR_XN_Msk  /*!< Instruction fetches disabled*/
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_SHAREABLE_ACCESS MPU Shareable Access
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_SHAREABLE            MPU_RASR_S_Msk   /*!< Shareable memory attribute */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_SHAREABLE        ((uint32_t)0x00U) /*!< Not Shareable memory attribute */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CACHEABLE_ACCESS MPU Cacheable Access
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_CACHEABLE            MPU_RASR_C_Msk   /*!< Cacheable memory attribute */
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_CACHEABLE        ((uint32_t)0x00U) /*!< Not Cacheable memory attribute */
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_BUFFERABLE_ACCESS MPU Bufferable Access
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
ARM GAS  /tmp/ccnIlCuV.s 			page 95


 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_BUFFERABLE           MPU_RASR_B_Msk   /*!< Bufferable memory attribute */
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_BUFFERABLE       ((uint32_t)0x00U) /*!< Not Bufferable memory attribute *
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #endif /* __MPU_PRESENT */
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Exported macro ------------------------------------------------------------*/
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Exported functions --------------------------------------------------------*/
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Functions CORTEX Exported Functions
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EF_SYSTICK SYSTICK
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @brief  This function checks if the Systick counter flag is active or not.
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @note   It can be used in timeout function on application side.
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @rmtoll STK_CTRL     COUNTFLAG     LL_SYSTICK_IsActiveCounterFlag
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @retval State of bit (1 or 0).
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag(void)
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** {
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   return ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk));
 936              		.loc 3 237 0 is_stmt 1
 937 002a 0A4B     		ldr	r3, .L40
 938              	.LVL117:
 939 002c 1B68     		ldr	r3, [r3]
 940              	.LBE175:
 941              	.LBE174:
 774:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 775:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 942              		.loc 1 775 0
 943 002e DB03     		lsls	r3, r3, #15
 944 0030 02D5     		bpl	.L35
 776:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       {
 777:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****         timeout --;
 945              		.loc 1 777 0
 946 0032 019B     		ldr	r3, [sp, #4]
 947 0034 013B     		subs	r3, r3, #1
 948 0036 0193     		str	r3, [sp, #4]
 949              	.L35:
 950              	.LVL118:
 951              	.LBB176:
 952              	.LBB177:
 953              		.loc 2 3429 0
 954 0038 C268     		ldr	r2, [r0, #12]
 955 003a 4023     		movs	r3, #64
 956 003c 1340     		ands	r3, r2
 957 003e 5A1E     		subs	r2, r3, #1
 958 0040 9341     		sbcs	r3, r3, r2
ARM GAS  /tmp/ccnIlCuV.s 			page 96


 959              	.LVL119:
 960              	.LBE177:
 961              	.LBE176:
 778:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       }
 779:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       tmp = LL_RTC_IsActiveFlag_INIT(RTCx);
 780:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       if (timeout == 0U)
 962              		.loc 1 780 0
 963 0042 019A     		ldr	r2, [sp, #4]
 964 0044 002A     		cmp	r2, #0
 965 0046 EBD1     		bne	.L34
 781:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       {
 782:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****         status = ERROR;
 966              		.loc 1 782 0
 967 0048 0021     		movs	r1, #0
 968              	.LVL120:
 969 004a E9E7     		b	.L34
 970              	.LVL121:
 971              	.L38:
 759:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   uint32_t tmp = 0U;
 972              		.loc 1 759 0
 973 004c 0121     		movs	r1, #1
 974              	.LVL122:
 975              	.L33:
 783:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       }
 784:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 785:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 786:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return status;
 787:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 976              		.loc 1 787 0
 977 004e 0800     		movs	r0, r1
 978              	.LVL123:
 979 0050 02B0     		add	sp, sp, #8
 980              		@ sp needed
 981 0052 7047     		bx	lr
 982              	.L41:
 983              		.align	2
 984              	.L40:
 985 0054 10E000E0 		.word	-536813552
 986              		.cfi_endproc
 987              	.LFE269:
 989              		.section	.text.LL_RTC_Init,"ax",%progbits
 990              		.align	1
 991              		.global	LL_RTC_Init
 992              		.syntax unified
 993              		.code	16
 994              		.thumb_func
 995              		.fpu softvfp
 997              	LL_RTC_Init:
 998              	.LFB259:
 230:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 999              		.loc 1 230 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003              	.LVL124:
 1004 0000 70B5     		push	{r4, r5, r6, lr}
 1005              	.LCFI5:
ARM GAS  /tmp/ccnIlCuV.s 			page 97


 1006              		.cfi_def_cfa_offset 16
 1007              		.cfi_offset 4, -16
 1008              		.cfi_offset 5, -12
 1009              		.cfi_offset 6, -8
 1010              		.cfi_offset 14, -4
 1011 0002 0400     		movs	r4, r0
 1012 0004 0D00     		movs	r5, r1
 1013              	.LVL125:
 1014              	.LBB178:
 1015              	.LBB179:
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 1016              		.loc 2 1064 0
 1017 0006 CA23     		movs	r3, #202
 1018 0008 4362     		str	r3, [r0, #36]
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1019              		.loc 2 1065 0
 1020 000a 773B     		subs	r3, r3, #119
 1021 000c 4362     		str	r3, [r0, #36]
 1022              	.LVL126:
 1023              	.LBE179:
 1024              	.LBE178:
 243:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 1025              		.loc 1 243 0
 1026 000e FFF7FEFF 		bl	LL_RTC_EnterInitMode
 1027              	.LVL127:
 1028 0012 0028     		cmp	r0, #0
 1029 0014 16D0     		beq	.L43
 1030              	.LVL128:
 1031              	.LBB180:
 1032              	.LBB181:
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1033              		.loc 2 807 0
 1034 0016 A368     		ldr	r3, [r4, #8]
 1035 0018 4022     		movs	r2, #64
 1036 001a 9343     		bics	r3, r2
 1037 001c 2A68     		ldr	r2, [r5]
 1038 001e 1343     		orrs	r3, r2
 1039 0020 A360     		str	r3, [r4, #8]
 1040              	.LVL129:
 1041              	.LBE181:
 1042              	.LBE180:
 1043              	.LBB182:
 1044              	.LBB183:
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1045              		.loc 2 1020 0
 1046 0022 2369     		ldr	r3, [r4, #16]
 1047 0024 DB0B     		lsrs	r3, r3, #15
 1048 0026 DB03     		lsls	r3, r3, #15
 1049 0028 AA68     		ldr	r2, [r5, #8]
 1050 002a 1343     		orrs	r3, r2
 1051 002c 2361     		str	r3, [r4, #16]
 1052              	.LVL130:
 1053              	.LBE183:
 1054              	.LBE182:
 250:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1055              		.loc 1 250 0
 1056 002e 6A68     		ldr	r2, [r5, #4]
ARM GAS  /tmp/ccnIlCuV.s 			page 98


 1057              	.LVL131:
 1058              	.LBB184:
 1059              	.LBB185:
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1060              		.loc 2 1008 0
 1061 0030 2369     		ldr	r3, [r4, #16]
 1062 0032 0649     		ldr	r1, .L44
 1063 0034 0B40     		ands	r3, r1
 1064 0036 1204     		lsls	r2, r2, #16
 1065              	.LVL132:
 1066 0038 1343     		orrs	r3, r2
 1067 003a 2361     		str	r3, [r4, #16]
 1068              	.LVL133:
 1069              	.LBE185:
 1070              	.LBE184:
 1071              	.LBB186:
 1072              	.LBB187:
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1073              		.loc 2 908 0
 1074 003c 8123     		movs	r3, #129
 1075 003e 5B42     		rsbs	r3, r3, #0
 1076 0040 E360     		str	r3, [r4, #12]
 1077              	.LVL134:
 1078              	.LBE187:
 1079              	.LBE186:
 255:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 1080              		.loc 1 255 0
 1081 0042 0120     		movs	r0, #1
 1082              	.LVL135:
 1083              	.L43:
 1084              	.LBB188:
 1085              	.LBB189:
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1086              		.loc 2 1053 0
 1087 0044 FF23     		movs	r3, #255
 1088 0046 6362     		str	r3, [r4, #36]
 1089              	.LVL136:
 1090              	.LBE189:
 1091              	.LBE188:
 261:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1092              		.loc 1 261 0
 1093              		@ sp needed
 1094              	.LVL137:
 1095              	.LVL138:
 1096 0048 70BD     		pop	{r4, r5, r6, pc}
 1097              	.L45:
 1098 004a C046     		.align	2
 1099              	.L44:
 1100 004c FFFF80FF 		.word	-8323073
 1101              		.cfi_endproc
 1102              	.LFE259:
 1104              		.section	.text.LL_RTC_ExitInitMode,"ax",%progbits
 1105              		.align	1
 1106              		.global	LL_RTC_ExitInitMode
 1107              		.syntax unified
 1108              		.code	16
 1109              		.thumb_func
ARM GAS  /tmp/ccnIlCuV.s 			page 99


 1110              		.fpu softvfp
 1112              	LL_RTC_ExitInitMode:
 1113              	.LFB270:
 788:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 789:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 790:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Exit the RTC Initialization mode.
 791:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   When the initialization sequence is complete, the calendar restarts
 792:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         counting after 4 RTCCLK cycles.
 793:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
 794:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 795:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 796:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 797:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: RTC exited from in Init mode
 798:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: Not applicable
 799:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 800:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_ExitInitMode(RTC_TypeDef *RTCx)
 801:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 1114              		.loc 1 801 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              		@ link register save eliminated.
 1119              	.LVL139:
 1120              	.LBB190:
 1121              	.LBB191:
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1122              		.loc 2 908 0
 1123 0000 8123     		movs	r3, #129
 1124 0002 5B42     		rsbs	r3, r3, #0
 1125 0004 C360     		str	r3, [r0, #12]
 1126              	.LVL140:
 1127              	.LBE191:
 1128              	.LBE190:
 802:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameter */
 803:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 804:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 805:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Disable initialization mode */
 806:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_DisableInitMode(RTCx);
 807:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 808:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return SUCCESS;
 809:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 1129              		.loc 1 809 0
 1130 0006 0120     		movs	r0, #1
 1131              	.LVL141:
 1132              		@ sp needed
 1133 0008 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE270:
 1137              		.section	.text.LL_RTC_WaitForSynchro,"ax",%progbits
 1138              		.align	1
 1139              		.global	LL_RTC_WaitForSynchro
 1140              		.syntax unified
 1141              		.code	16
 1142              		.thumb_func
 1143              		.fpu softvfp
 1145              	LL_RTC_WaitForSynchro:
 1146              	.LFB271:
ARM GAS  /tmp/ccnIlCuV.s 			page 100


 810:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 811:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** /**
 812:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @brief  Waits until the RTC Time and Day registers (RTC_TR and RTC_DR) are
 813:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         synchronized with RTC APB clock.
 814:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the
 815:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 816:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar
 817:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
 818:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         the software must first clear the RSF flag.
 819:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         The software must then wait until it is set again before reading
 820:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         the calendar, which means that the calendar registers have been
 821:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
 822:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 823:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 824:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are synchronised
 825:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   *          - ERROR: RTC registers are not synchronised
 826:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   */
 827:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** ErrorStatus LL_RTC_WaitForSynchro(RTC_TypeDef *RTCx)
 828:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** {
 1147              		.loc 1 828 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 8
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 1152              	.LVL142:
 1153 0000 82B0     		sub	sp, sp, #8
 1154              	.LCFI6:
 1155              		.cfi_def_cfa_offset 8
 1156 0002 0100     		movs	r1, r0
 829:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   __IO uint32_t timeout = RTC_SYNCHRO_TIMEOUT;
 1157              		.loc 1 829 0
 1158 0004 FA23     		movs	r3, #250
 1159 0006 9B00     		lsls	r3, r3, #2
 1160 0008 0193     		str	r3, [sp, #4]
 1161              	.LVL143:
 1162              	.LBB192:
 1163              	.LBB193:
3430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Get Registers synchronization flag
3434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          RSF           LL_RTC_IsActiveFlag_RS
3435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RS(RTC_TypeDef *RTCx)
3439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_RSF) == (RTC_ISR_RSF));
3441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
3442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** 
3443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** /**
3444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @brief  Clear Registers synchronization flag
3445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @rmtoll ISR          RSF           LL_RTC_ClearFlag_RS
3446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   * @retval None
3448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   */
3449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_RS(RTC_TypeDef *RTCx)
ARM GAS  /tmp/ccnIlCuV.s 			page 101


3450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** {
3451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_RSF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT))
 1164              		.loc 2 3451 0
 1165 000a C268     		ldr	r2, [r0, #12]
 1166 000c 8023     		movs	r3, #128
 1167 000e 1A40     		ands	r2, r3
 1168 0010 223B     		subs	r3, r3, #34
 1169 0012 FF3B     		subs	r3, r3, #255
 1170 0014 1343     		orrs	r3, r2
 1171 0016 C360     		str	r3, [r0, #12]
 1172              	.LVL144:
 1173              	.LBE193:
 1174              	.LBE192:
 1175              	.LBB194:
 1176              	.LBB195:
3440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1177              		.loc 2 3440 0
 1178 0018 C268     		ldr	r2, [r0, #12]
 1179 001a 2023     		movs	r3, #32
 1180 001c 1340     		ands	r3, r2
 1181 001e 5A1E     		subs	r2, r3, #1
 1182 0020 9341     		sbcs	r3, r3, r2
 1183              	.LVL145:
 1184              	.LBE195:
 1185              	.LBE194:
 830:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
 1186              		.loc 1 830 0
 1187 0022 0120     		movs	r0, #1
 1188              	.LVL146:
 1189              	.L48:
 831:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   uint32_t tmp = 0U;
 832:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 833:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Check the parameter */
 834:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 835:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 836:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Clear RSF flag */
 837:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   LL_RTC_ClearFlag_RS(RTCx);
 838:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 839:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   /* Wait the registers to be synchronised */
 840:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 841:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   while ((timeout != 0U) && (tmp != 0U))
 1190              		.loc 1 841 0
 1191 0024 019A     		ldr	r2, [sp, #4]
 1192 0026 002A     		cmp	r2, #0
 1193 0028 12D0     		beq	.L51
 1194              		.loc 1 841 0 is_stmt 0 discriminator 1
 1195 002a 002B     		cmp	r3, #0
 1196 002c 10D0     		beq	.L51
 1197              	.LBB196:
 1198              	.LBB197:
 1199              		.loc 3 237 0 is_stmt 1
 1200 002e 194B     		ldr	r3, .L60
 1201              	.LVL147:
 1202 0030 1B68     		ldr	r3, [r3]
 1203              	.LBE197:
 1204              	.LBE196:
 842:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
ARM GAS  /tmp/ccnIlCuV.s 			page 102


 843:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 1205              		.loc 1 843 0
 1206 0032 DB03     		lsls	r3, r3, #15
 1207 0034 02D5     		bpl	.L49
 844:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 845:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       timeout--;
 1208              		.loc 1 845 0
 1209 0036 019B     		ldr	r3, [sp, #4]
 1210 0038 013B     		subs	r3, r3, #1
 1211 003a 0193     		str	r3, [sp, #4]
 1212              	.L49:
 1213              	.LVL148:
 1214              	.LBB198:
 1215              	.LBB199:
3440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1216              		.loc 2 3440 0
 1217 003c CA68     		ldr	r2, [r1, #12]
 1218 003e 2023     		movs	r3, #32
 1219 0040 1340     		ands	r3, r2
 1220 0042 5A1E     		subs	r2, r3, #1
 1221 0044 9341     		sbcs	r3, r3, r2
 1222              	.LVL149:
 1223              	.LBE199:
 1224              	.LBE198:
 846:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 847:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 848:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     if (timeout == 0U)
 1225              		.loc 1 848 0
 1226 0046 019A     		ldr	r2, [sp, #4]
 1227 0048 002A     		cmp	r2, #0
 1228 004a EBD1     		bne	.L48
 849:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 850:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       status = ERROR;
 1229              		.loc 1 850 0
 1230 004c 0020     		movs	r0, #0
 1231              	.LVL150:
 1232 004e E9E7     		b	.L48
 1233              	.LVL151:
 1234              	.L51:
 851:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 852:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 853:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 854:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   if (status != ERROR)
 1235              		.loc 1 854 0
 1236 0050 0028     		cmp	r0, #0
 1237 0052 1DD0     		beq	.L53
 855:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 856:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     timeout = RTC_SYNCHRO_TIMEOUT;
 1238              		.loc 1 856 0
 1239 0054 FA23     		movs	r3, #250
 1240              	.LVL152:
 1241 0056 9B00     		lsls	r3, r3, #2
 1242 0058 0193     		str	r3, [sp, #4]
 1243              	.LVL153:
 1244              	.LBB200:
 1245              	.LBB201:
3440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
ARM GAS  /tmp/ccnIlCuV.s 			page 103


 1246              		.loc 2 3440 0
 1247 005a CA68     		ldr	r2, [r1, #12]
 1248 005c 2023     		movs	r3, #32
 1249 005e 1340     		ands	r3, r2
 1250 0060 5A1E     		subs	r2, r3, #1
 1251 0062 9341     		sbcs	r3, r3, r2
 1252              	.LVL154:
 1253              	.L54:
 1254              	.LBE201:
 1255              	.LBE200:
 857:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 858:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     while ((timeout != 0U) && (tmp != 1U))
 1256              		.loc 1 858 0
 1257 0064 019A     		ldr	r2, [sp, #4]
 1258 0066 002A     		cmp	r2, #0
 1259 0068 12D0     		beq	.L53
 1260              		.loc 1 858 0 is_stmt 0 discriminator 1
 1261 006a 012B     		cmp	r3, #1
 1262 006c 10D0     		beq	.L53
 1263              	.LBB202:
 1264              	.LBB203:
 1265              		.loc 3 237 0 is_stmt 1
 1266 006e 094B     		ldr	r3, .L60
 1267              	.LVL155:
 1268 0070 1B68     		ldr	r3, [r3]
 1269              	.LBE203:
 1270              	.LBE202:
 859:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 860:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 1271              		.loc 1 860 0
 1272 0072 DB03     		lsls	r3, r3, #15
 1273 0074 02D5     		bpl	.L55
 861:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       {
 862:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****         timeout--;
 1274              		.loc 1 862 0
 1275 0076 019B     		ldr	r3, [sp, #4]
 1276 0078 013B     		subs	r3, r3, #1
 1277 007a 0193     		str	r3, [sp, #4]
 1278              	.L55:
 1279              	.LVL156:
 1280              	.LBB204:
 1281              	.LBB205:
3440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1282              		.loc 2 3440 0
 1283 007c CA68     		ldr	r2, [r1, #12]
 1284 007e 2023     		movs	r3, #32
 1285 0080 1340     		ands	r3, r2
 1286 0082 5A1E     		subs	r2, r3, #1
 1287 0084 9341     		sbcs	r3, r3, r2
 1288              	.LVL157:
 1289              	.LBE205:
 1290              	.LBE204:
 863:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       }
 864:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 865:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       if (timeout == 0U)
 1291              		.loc 1 865 0
 1292 0086 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccnIlCuV.s 			page 104


 1293 0088 002A     		cmp	r2, #0
 1294 008a EBD1     		bne	.L54
 866:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       {
 867:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****         status = ERROR;
 1295              		.loc 1 867 0
 1296 008c 0020     		movs	r0, #0
 1297              	.LVL158:
 1298 008e E9E7     		b	.L54
 1299              	.LVL159:
 1300              	.L53:
 868:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       }
 869:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 870:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 871:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 872:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   return (status);
 873:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** }
 1301              		.loc 1 873 0
 1302 0090 02B0     		add	sp, sp, #8
 1303              		@ sp needed
 1304 0092 7047     		bx	lr
 1305              	.L61:
 1306              		.align	2
 1307              	.L60:
 1308 0094 10E000E0 		.word	-536813552
 1309              		.cfi_endproc
 1310              	.LFE271:
 1312              		.section	.text.LL_RTC_DeInit,"ax",%progbits
 1313              		.align	1
 1314              		.global	LL_RTC_DeInit
 1315              		.syntax unified
 1316              		.code	16
 1317              		.thumb_func
 1318              		.fpu softvfp
 1320              	LL_RTC_DeInit:
 1321              	.LFB258:
 166:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 1322              		.loc 1 166 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              	.LVL160:
 1327 0000 10B5     		push	{r4, lr}
 1328              	.LCFI7:
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 4, -8
 1331              		.cfi_offset 14, -4
 1332 0002 0400     		movs	r4, r0
 1333              	.LVL161:
 1334              	.LBB206:
 1335              	.LBB207:
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 1336              		.loc 2 1064 0
 1337 0004 CA23     		movs	r3, #202
 1338 0006 4362     		str	r3, [r0, #36]
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1339              		.loc 2 1065 0
 1340 0008 773B     		subs	r3, r3, #119
ARM GAS  /tmp/ccnIlCuV.s 			page 105


 1341 000a 4362     		str	r3, [r0, #36]
 1342              	.LVL162:
 1343              	.LBE207:
 1344              	.LBE206:
 176:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 1345              		.loc 1 176 0
 1346 000c FFF7FEFF 		bl	LL_RTC_EnterInitMode
 1347              	.LVL163:
 1348 0010 0028     		cmp	r0, #0
 1349 0012 02D1     		bne	.L64
 1350              	.LVL164:
 1351              	.L63:
 1352              	.LBB208:
 1353              	.LBB209:
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1354              		.loc 2 1053 0
 1355 0014 FF23     		movs	r3, #255
 1356 0016 6362     		str	r3, [r4, #36]
 1357              	.LVL165:
 1358              	.LBE209:
 1359              	.LBE208:
 215:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1360              		.loc 1 215 0
 1361              		@ sp needed
 1362              	.LVL166:
 1363 0018 10BD     		pop	{r4, pc}
 1364              	.LVL167:
 1365              	.L64:
 179:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #if defined(RTC_WAKEUP_SUPPORT)
 1366              		.loc 1 179 0
 1367 001a 0023     		movs	r3, #0
 1368 001c 2360     		str	r3, [r4]
 181:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #endif /* RTC_WAKEUP_SUPPORT */
 1369              		.loc 1 181 0
 1370 001e 0B4A     		ldr	r2, .L65
 1371 0020 6261     		str	r2, [r4, #20]
 183:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 1372              		.loc 1 183 0
 1373 0022 0B4A     		ldr	r2, .L65+4
 1374 0024 6260     		str	r2, [r4, #4]
 186:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** #else
 1375              		.loc 1 186 0
 1376 0026 A168     		ldr	r1, [r4, #8]
 1377 0028 0722     		movs	r2, #7
 1378 002a 0A40     		ands	r2, r1
 1379 002c A260     		str	r2, [r4, #8]
 190:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMAR,   0x00000000U);
 1380              		.loc 1 190 0
 1381 002e 094A     		ldr	r2, .L65+8
 1382 0030 2261     		str	r2, [r4, #16]
 191:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMBR,   0x00000000U);
 1383              		.loc 1 191 0
 1384 0032 E361     		str	r3, [r4, #28]
 192:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, SHIFTR,   0x00000000U);
 1385              		.loc 1 192 0
 1386 0034 2362     		str	r3, [r4, #32]
 193:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CALR,     0x00000000U);
ARM GAS  /tmp/ccnIlCuV.s 			page 106


 1387              		.loc 1 193 0
 1388 0036 E362     		str	r3, [r4, #44]
 194:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMASSR, 0x00000000U);
 1389              		.loc 1 194 0
 1390 0038 E363     		str	r3, [r4, #60]
 195:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMBSSR, 0x00000000U);
 1391              		.loc 1 195 0
 1392 003a 6364     		str	r3, [r4, #68]
 196:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1393              		.loc 1 196 0
 1394 003c A364     		str	r3, [r4, #72]
 199:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1395              		.loc 1 199 0
 1396 003e E360     		str	r3, [r4, #12]
 202:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1397              		.loc 1 202 0
 1398 0040 2364     		str	r3, [r4, #64]
 205:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1399              		.loc 1 205 0
 1400 0042 E364     		str	r3, [r4, #76]
 208:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 1401              		.loc 1 208 0
 1402 0044 2000     		movs	r0, r4
 1403 0046 FFF7FEFF 		bl	LL_RTC_WaitForSynchro
 1404              	.LVL168:
 1405 004a E3E7     		b	.L63
 1406              	.L66:
 1407              		.align	2
 1408              	.L65:
 1409 004c FFFF0000 		.word	65535
 1410 0050 01210000 		.word	8449
 1411 0054 FF007F00 		.word	8323327
 1412              		.cfi_endproc
 1413              	.LFE258:
 1415              		.section	.text.LL_RTC_TIME_Init,"ax",%progbits
 1416              		.align	1
 1417              		.global	LL_RTC_TIME_Init
 1418              		.syntax unified
 1419              		.code	16
 1420              		.thumb_func
 1421              		.fpu softvfp
 1423              	LL_RTC_TIME_Init:
 1424              	.LFB261:
 289:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 1425              		.loc 1 289 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              	.LVL169:
 1430 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1431              	.LCFI8:
 1432              		.cfi_def_cfa_offset 24
 1433              		.cfi_offset 3, -24
 1434              		.cfi_offset 4, -20
 1435              		.cfi_offset 5, -16
 1436              		.cfi_offset 6, -12
 1437              		.cfi_offset 7, -8
ARM GAS  /tmp/ccnIlCuV.s 			page 107


 1438              		.cfi_offset 14, -4
 1439 0002 CE46     		mov	lr, r9
 1440 0004 4746     		mov	r7, r8
 1441 0006 80B5     		push	{r7, lr}
 1442              	.LCFI9:
 1443              		.cfi_def_cfa_offset 32
 1444              		.cfi_offset 8, -32
 1445              		.cfi_offset 9, -28
 1446 0008 0400     		movs	r4, r0
 1447 000a 0E00     		movs	r6, r1
 1448 000c 1500     		movs	r5, r2
 1449              	.LVL170:
 296:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 1450              		.loc 1 296 0
 1451 000e 0029     		cmp	r1, #0
 1452 0010 2BD1     		bne	.L68
 1453              	.LVL171:
 1454              	.LBB210:
 1455              	.LBB211:
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1456              		.loc 2 820 0
 1457 0012 8368     		ldr	r3, [r0, #8]
 1458              	.LVL172:
 1459              	.LBE211:
 1460              	.LBE210:
 298:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 1461              		.loc 1 298 0
 1462 0014 5B06     		lsls	r3, r3, #25
 1463 0016 01D4     		bmi	.L69
 305:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_TimeStruct->Hours));
 1464              		.loc 1 305 0
 1465 0018 0023     		movs	r3, #0
 1466 001a 1360     		str	r3, [r2]
 1467              	.L69:
 1468              	.LVL173:
 1469              	.LBB212:
 1470              	.LBB213:
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 1471              		.loc 2 1064 0
 1472 001c CA23     		movs	r3, #202
 1473 001e 6362     		str	r3, [r4, #36]
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1474              		.loc 2 1065 0
 1475 0020 773B     		subs	r3, r3, #119
 1476 0022 6362     		str	r3, [r4, #36]
 1477              	.LVL174:
 1478              	.LBE213:
 1479              	.LBE212:
 331:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 1480              		.loc 1 331 0
 1481 0024 2000     		movs	r0, r4
 1482              	.LVL175:
 1483 0026 FFF7FEFF 		bl	LL_RTC_EnterInitMode
 1484              	.LVL176:
 1485 002a 0028     		cmp	r0, #0
 1486 002c 17D0     		beq	.L70
 334:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
ARM GAS  /tmp/ccnIlCuV.s 			page 108


 1487              		.loc 1 334 0
 1488 002e 002E     		cmp	r6, #0
 1489 0030 21D0     		beq	.L71
 336:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                          RTC_TimeStruct->Minutes, RTC_TimeStruct->Seconds);
 1490              		.loc 1 336 0
 1491 0032 2A68     		ldr	r2, [r5]
 1492 0034 2879     		ldrb	r0, [r5, #4]
 337:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 1493              		.loc 1 337 0
 1494 0036 6979     		ldrb	r1, [r5, #5]
 1495 0038 AB79     		ldrb	r3, [r5, #6]
 1496              	.LVL177:
 1497              	.LBB214:
 1498              	.LBB215:
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_TR_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_TR_
 1499              		.loc 2 1271 0
 1500 003a 0004     		lsls	r0, r0, #16
 1501              	.LVL178:
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_POSITION_TR_HT - 4U)) | ((Hours & 0x0FU) << RTC_POSITION_TR_HU))
 1502              		.loc 2 1270 0
 1503 003c 0243     		orrs	r2, r0
 1504              	.LVL179:
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_POSITION_TR_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITION_TR_
 1505              		.loc 2 1272 0
 1506 003e 0902     		lsls	r1, r1, #8
 1507              	.LVL180:
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_TR_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_TR_
 1508              		.loc 2 1271 0
 1509 0040 0A43     		orrs	r2, r1
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_POSITION_TR_HT - 4U)) | ((Hours & 0x0FU) << RTC_POSITION_TR_HU))
 1510              		.loc 2 1270 0
 1511 0042 1343     		orrs	r3, r2
 1512              	.LVL181:
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1513              		.loc 2 1274 0
 1514 0044 2268     		ldr	r2, [r4]
 1515 0046 2949     		ldr	r1, .L75
 1516 0048 0A40     		ands	r2, r1
 1517 004a 1343     		orrs	r3, r2
 1518              	.LVL182:
 1519 004c 2360     		str	r3, [r4]
 1520              	.LVL183:
 1521              	.L72:
 1522              	.LBE215:
 1523              	.LBE214:
 1524              	.LBB216:
 1525              	.LBB217:
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1526              		.loc 2 908 0
 1527 004e 284B     		ldr	r3, .L75+4
 1528 0050 8122     		movs	r2, #129
 1529 0052 5242     		rsbs	r2, r2, #0
 1530 0054 DA60     		str	r2, [r3, #12]
 1531              	.LVL184:
 1532              	.LBE217:
 1533              	.LBE216:
 1534              	.LBB218:
ARM GAS  /tmp/ccnIlCuV.s 			page 109


 1535              	.LBB219:
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1536              		.loc 2 970 0
 1537 0056 A368     		ldr	r3, [r4, #8]
 1538              	.LVL185:
 1539              	.LBE219:
 1540              	.LBE218:
 350:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 1541              		.loc 1 350 0
 1542 0058 9B06     		lsls	r3, r3, #26
 1543 005a 43D5     		bpl	.L74
 356:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 1544              		.loc 1 356 0
 1545 005c 0120     		movs	r0, #1
 1546              	.LVL186:
 1547              	.L70:
 1548              	.LBB220:
 1549              	.LBB221:
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1550              		.loc 2 1053 0
 1551 005e FF23     		movs	r3, #255
 1552 0060 6362     		str	r3, [r4, #36]
 1553              	.LVL187:
 1554              	.LBE221:
 1555              	.LBE220:
 363:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1556              		.loc 1 363 0
 1557              		@ sp needed
 1558              	.LVL188:
 1559 0062 0CBC     		pop	{r2, r3}
 1560 0064 9046     		mov	r8, r2
 1561 0066 9946     		mov	r9, r3
 1562 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1563              	.LVL189:
 1564              	.L68:
 1565              	.LBB222:
 1566              	.LBB223:
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1567              		.loc 2 820 0
 1568 006a 8368     		ldr	r3, [r0, #8]
 1569              	.LVL190:
 1570              	.LBE223:
 1571              	.LBE222:
 313:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 1572              		.loc 1 313 0
 1573 006c 5B06     		lsls	r3, r3, #25
 1574 006e D5D4     		bmi	.L69
 320:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 1575              		.loc 1 320 0
 1576 0070 0023     		movs	r3, #0
 1577 0072 1360     		str	r3, [r2]
 1578 0074 D2E7     		b	.L69
 1579              	.LVL191:
 1580              	.L71:
 341:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Minutes),
 1581              		.loc 1 341 0
 1582 0076 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/ccnIlCuV.s 			page 110


 1583 0078 9946     		mov	r9, r3
 1584 007a 2E79     		ldrb	r6, [r5, #4]
 1585              	.LVL192:
 1586 007c 0A21     		movs	r1, #10
 1587 007e 3000     		movs	r0, r6
 1588 0080 FFF7FEFF 		bl	__aeabi_uidiv
 1589              	.LVL193:
 1590 0084 0001     		lsls	r0, r0, #4
 1591 0086 C7B2     		uxtb	r7, r0
 1592 0088 0A21     		movs	r1, #10
 1593 008a 3000     		movs	r0, r6
 1594 008c FFF7FEFF 		bl	__aeabi_uidivmod
 1595              	.LVL194:
 1596 0090 0F43     		orrs	r7, r1
 1597 0092 FBB2     		uxtb	r3, r7
 1598 0094 9846     		mov	r8, r3
 342:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Seconds));
 1599              		.loc 1 342 0
 1600 0096 6F79     		ldrb	r7, [r5, #5]
 1601 0098 0A21     		movs	r1, #10
 1602 009a 3800     		movs	r0, r7
 1603 009c FFF7FEFF 		bl	__aeabi_uidiv
 1604              	.LVL195:
 1605 00a0 0001     		lsls	r0, r0, #4
 1606 00a2 C6B2     		uxtb	r6, r0
 1607 00a4 0A21     		movs	r1, #10
 1608 00a6 3800     		movs	r0, r7
 1609 00a8 FFF7FEFF 		bl	__aeabi_uidivmod
 1610              	.LVL196:
 1611 00ac 0E43     		orrs	r6, r1
 1612 00ae F6B2     		uxtb	r6, r6
 343:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 1613              		.loc 1 343 0
 1614 00b0 AF79     		ldrb	r7, [r5, #6]
 1615 00b2 0A21     		movs	r1, #10
 1616 00b4 3800     		movs	r0, r7
 1617 00b6 FFF7FEFF 		bl	__aeabi_uidiv
 1618              	.LVL197:
 1619 00ba 0001     		lsls	r0, r0, #4
 1620 00bc C5B2     		uxtb	r5, r0
 1621              	.LVL198:
 1622 00be 0A21     		movs	r1, #10
 1623 00c0 3800     		movs	r0, r7
 1624 00c2 FFF7FEFF 		bl	__aeabi_uidivmod
 1625              	.LVL199:
 1626 00c6 0D43     		orrs	r5, r1
 1627 00c8 EDB2     		uxtb	r5, r5
 1628              	.LVL200:
 1629              	.LBB224:
 1630              	.LBB225:
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_TR_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_TR_
 1631              		.loc 2 1271 0
 1632 00ca 4346     		mov	r3, r8
 1633 00cc 1B04     		lsls	r3, r3, #16
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_POSITION_TR_HT - 4U)) | ((Hours & 0x0FU) << RTC_POSITION_TR_HU))
 1634              		.loc 2 1270 0
 1635 00ce 4A46     		mov	r2, r9
ARM GAS  /tmp/ccnIlCuV.s 			page 111


 1636 00d0 1343     		orrs	r3, r2
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_POSITION_TR_ST - 4U)) | ((Seconds & 0x0FU) << RTC_POSITION_TR_
 1637              		.loc 2 1272 0
 1638 00d2 3602     		lsls	r6, r6, #8
 1639              	.LVL201:
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_POSITION_TR_MT - 4U)) | ((Minutes & 0x0FU) << RTC_POSITION_TR_
 1640              		.loc 2 1271 0
 1641 00d4 1E43     		orrs	r6, r3
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_POSITION_TR_HT - 4U)) | ((Hours & 0x0FU) << RTC_POSITION_TR_HU))
 1642              		.loc 2 1270 0
 1643 00d6 3543     		orrs	r5, r6
 1644              	.LVL202:
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1645              		.loc 2 1274 0
 1646 00d8 2168     		ldr	r1, [r4]
 1647 00da 044B     		ldr	r3, .L75
 1648 00dc 1940     		ands	r1, r3
 1649 00de 0D43     		orrs	r5, r1
 1650              	.LVL203:
 1651 00e0 2560     		str	r5, [r4]
 1652 00e2 B4E7     		b	.L72
 1653              	.LVL204:
 1654              	.L74:
 1655              	.LBE225:
 1656              	.LBE224:
 352:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 1657              		.loc 1 352 0
 1658 00e4 2000     		movs	r0, r4
 1659 00e6 FFF7FEFF 		bl	LL_RTC_WaitForSynchro
 1660              	.LVL205:
 1661 00ea B8E7     		b	.L70
 1662              	.L76:
 1663              		.align	2
 1664              	.L75:
 1665 00ec 808080FF 		.word	-8355712
 1666 00f0 00280040 		.word	1073752064
 1667              		.cfi_endproc
 1668              	.LFE261:
 1670              		.section	.text.LL_RTC_DATE_Init,"ax",%progbits
 1671              		.align	1
 1672              		.global	LL_RTC_DATE_Init
 1673              		.syntax unified
 1674              		.code	16
 1675              		.thumb_func
 1676              		.fpu softvfp
 1678              	LL_RTC_DATE_Init:
 1679              	.LFB263:
 392:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 1680              		.loc 1 392 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              	.LVL206:
 1685 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1686              	.LCFI10:
 1687              		.cfi_def_cfa_offset 24
 1688              		.cfi_offset 3, -24
ARM GAS  /tmp/ccnIlCuV.s 			page 112


 1689              		.cfi_offset 4, -20
 1690              		.cfi_offset 5, -16
 1691              		.cfi_offset 6, -12
 1692              		.cfi_offset 7, -8
 1693              		.cfi_offset 14, -4
 1694 0002 CE46     		mov	lr, r9
 1695 0004 4746     		mov	r7, r8
 1696 0006 80B5     		push	{r7, lr}
 1697              	.LCFI11:
 1698              		.cfi_def_cfa_offset 32
 1699              		.cfi_offset 8, -32
 1700              		.cfi_offset 9, -28
 1701 0008 0400     		movs	r4, r0
 1702 000a 0E00     		movs	r6, r1
 1703 000c 1500     		movs	r5, r2
 1704              	.LVL207:
 399:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 1705              		.loc 1 399 0
 1706 000e 0029     		cmp	r1, #0
 1707 0010 06D1     		bne	.L78
 399:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 1708              		.loc 1 399 0 is_stmt 0 discriminator 1
 1709 0012 5378     		ldrb	r3, [r2, #1]
 1710 0014 DA06     		lsls	r2, r3, #27
 1711 0016 03D5     		bpl	.L78
 1712              	.LVL208:
 401:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   }
 1713              		.loc 1 401 0 is_stmt 1
 1714 0018 1022     		movs	r2, #16
 1715 001a 9343     		bics	r3, r2
 1716 001c 0A33     		adds	r3, r3, #10
 1717 001e 6B70     		strb	r3, [r5, #1]
 1718              	.L78:
 1719              	.LVL209:
 1720              	.LBB226:
 1721              	.LBB227:
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 1722              		.loc 2 1064 0
 1723 0020 CA23     		movs	r3, #202
 1724 0022 6362     		str	r3, [r4, #36]
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1725              		.loc 2 1065 0
 1726 0024 773B     		subs	r3, r3, #119
 1727 0026 6362     		str	r3, [r4, #36]
 1728              	.LVL210:
 1729              	.LBE227:
 1730              	.LBE226:
 421:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****   {
 1731              		.loc 1 421 0
 1732 0028 2000     		movs	r0, r4
 1733              	.LVL211:
 1734 002a FFF7FEFF 		bl	LL_RTC_EnterInitMode
 1735              	.LVL212:
 1736 002e 0028     		cmp	r0, #0
 1737 0030 18D0     		beq	.L79
 424:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 1738              		.loc 1 424 0
ARM GAS  /tmp/ccnIlCuV.s 			page 113


 1739 0032 002E     		cmp	r6, #0
 1740 0034 1CD0     		beq	.L80
 426:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 1741              		.loc 1 426 0
 1742 0036 2B78     		ldrb	r3, [r5]
 1743 0038 AA78     		ldrb	r2, [r5, #2]
 1744 003a 6978     		ldrb	r1, [r5, #1]
 1745 003c E878     		ldrb	r0, [r5, #3]
 1746              	.LVL213:
 1747              	.LBB228:
 1748              	.LBB229:
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_POSITION_DR_YT - 4U)) | ((Year & 0x0FU) << RTC_POSITION_DR_YU))  
 1749              		.loc 2 1604 0
 1750 003e 5B03     		lsls	r3, r3, #13
 1751              	.LVL214:
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_POSITION_DR_MT - 4U)) | ((Month & 0x0FU) << RTC_POSITION_DR_MU))
 1752              		.loc 2 1605 0
 1753 0040 0004     		lsls	r0, r0, #16
 1754              	.LVL215:
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_POSITION_DR_YT - 4U)) | ((Year & 0x0FU) << RTC_POSITION_DR_YU))  
 1755              		.loc 2 1604 0
 1756 0042 0343     		orrs	r3, r0
1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Day & 0xF0U) << (RTC_POSITION_DR_DT - 4U)) | ((Day & 0x0FU) << RTC_POSITION_DR_DU));
 1757              		.loc 2 1606 0
 1758 0044 0902     		lsls	r1, r1, #8
 1759              	.LVL216:
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_POSITION_DR_MT - 4U)) | ((Month & 0x0FU) << RTC_POSITION_DR_MU))
 1760              		.loc 2 1605 0
 1761 0046 0B43     		orrs	r3, r1
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_POSITION_DR_YT - 4U)) | ((Year & 0x0FU) << RTC_POSITION_DR_YU))  
 1762              		.loc 2 1604 0
 1763 0048 1343     		orrs	r3, r2
 1764              	.LVL217:
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1765              		.loc 2 1609 0
 1766 004a 6268     		ldr	r2, [r4, #4]
 1767              	.LVL218:
 1768 004c 2749     		ldr	r1, .L84
 1769 004e 0A40     		ands	r2, r1
 1770 0050 1343     		orrs	r3, r2
 1771              	.LVL219:
 1772 0052 6360     		str	r3, [r4, #4]
 1773              	.LVL220:
 1774              	.L81:
 1775              	.LBE229:
 1776              	.LBE228:
 1777              	.LBB230:
 1778              	.LBB231:
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1779              		.loc 2 908 0
 1780 0054 264B     		ldr	r3, .L84+4
 1781 0056 8122     		movs	r2, #129
 1782 0058 5242     		rsbs	r2, r2, #0
 1783 005a DA60     		str	r2, [r3, #12]
 1784              	.LVL221:
 1785              	.LBE231:
 1786              	.LBE230:
ARM GAS  /tmp/ccnIlCuV.s 			page 114


 1787              	.LBB232:
 1788              	.LBB233:
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1789              		.loc 2 970 0
 1790 005c A368     		ldr	r3, [r4, #8]
 1791              	.LVL222:
 1792              	.LBE233:
 1793              	.LBE232:
 438:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     {
 1794              		.loc 1 438 0
 1795 005e 9B06     		lsls	r3, r3, #26
 1796 0060 40D5     		bpl	.L83
 444:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 1797              		.loc 1 444 0
 1798 0062 0120     		movs	r0, #1
 1799              	.LVL223:
 1800              	.L79:
 1801              	.LBB234:
 1802              	.LBB235:
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1803              		.loc 2 1053 0
 1804 0064 FF23     		movs	r3, #255
 1805 0066 6362     		str	r3, [r4, #36]
 1806              	.LVL224:
 1807              	.LBE235:
 1808              	.LBE234:
 451:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c **** 
 1809              		.loc 1 451 0
 1810              		@ sp needed
 1811              	.LVL225:
 1812 0068 0CBC     		pop	{r2, r3}
 1813 006a 9046     		mov	r8, r2
 1814 006c 9946     		mov	r9, r3
 1815 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1816              	.LVL226:
 1817              	.L80:
 430:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Month), __LL_RTC_CONVERT_BIN2BCD(
 1818              		.loc 1 430 0
 1819 0070 2B78     		ldrb	r3, [r5]
 1820 0072 9946     		mov	r9, r3
 1821 0074 AF78     		ldrb	r7, [r5, #2]
 1822 0076 0A21     		movs	r1, #10
 1823 0078 3800     		movs	r0, r7
 1824 007a FFF7FEFF 		bl	__aeabi_uidiv
 1825              	.LVL227:
 1826 007e 0001     		lsls	r0, r0, #4
 1827 0080 C6B2     		uxtb	r6, r0
 1828              	.LVL228:
 1829 0082 0A21     		movs	r1, #10
 1830 0084 3800     		movs	r0, r7
 1831 0086 FFF7FEFF 		bl	__aeabi_uidivmod
 1832              	.LVL229:
 1833 008a 0E43     		orrs	r6, r1
 1834 008c F6B2     		uxtb	r6, r6
 431:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 1835              		.loc 1 431 0
 1836 008e 6F78     		ldrb	r7, [r5, #1]
ARM GAS  /tmp/ccnIlCuV.s 			page 115


 1837 0090 0A21     		movs	r1, #10
 1838 0092 3800     		movs	r0, r7
 1839 0094 FFF7FEFF 		bl	__aeabi_uidiv
 1840              	.LVL230:
 1841 0098 0001     		lsls	r0, r0, #4
 1842 009a C3B2     		uxtb	r3, r0
 1843 009c 9846     		mov	r8, r3
 1844 009e 0A21     		movs	r1, #10
 1845 00a0 3800     		movs	r0, r7
 1846 00a2 FFF7FEFF 		bl	__aeabi_uidivmod
 1847              	.LVL231:
 1848 00a6 4346     		mov	r3, r8
 1849 00a8 1943     		orrs	r1, r3
 1850 00aa CFB2     		uxtb	r7, r1
 1851 00ac ED78     		ldrb	r5, [r5, #3]
 1852              	.LVL232:
 1853 00ae 0A21     		movs	r1, #10
 1854 00b0 2800     		movs	r0, r5
 1855 00b2 FFF7FEFF 		bl	__aeabi_uidiv
 1856              	.LVL233:
 1857 00b6 0001     		lsls	r0, r0, #4
 1858 00b8 C3B2     		uxtb	r3, r0
 1859 00ba 9846     		mov	r8, r3
 1860 00bc 0A21     		movs	r1, #10
 1861 00be 2800     		movs	r0, r5
 1862 00c0 FFF7FEFF 		bl	__aeabi_uidivmod
 1863              	.LVL234:
 1864 00c4 4346     		mov	r3, r8
 1865 00c6 1943     		orrs	r1, r3
 1866 00c8 C9B2     		uxtb	r1, r1
 1867              	.LVL235:
 1868              	.LBB236:
 1869              	.LBB237:
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_POSITION_DR_YT - 4U)) | ((Year & 0x0FU) << RTC_POSITION_DR_YU))  
 1870              		.loc 2 1604 0
 1871 00ca 4B46     		mov	r3, r9
 1872 00cc 5B03     		lsls	r3, r3, #13
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_POSITION_DR_MT - 4U)) | ((Month & 0x0FU) << RTC_POSITION_DR_MU))
 1873              		.loc 2 1605 0
 1874 00ce 0904     		lsls	r1, r1, #16
 1875              	.LVL236:
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_POSITION_DR_YT - 4U)) | ((Year & 0x0FU) << RTC_POSITION_DR_YU))  
 1876              		.loc 2 1604 0
 1877 00d0 1943     		orrs	r1, r3
1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Day & 0xF0U) << (RTC_POSITION_DR_DT - 4U)) | ((Day & 0x0FU) << RTC_POSITION_DR_DU));
 1878              		.loc 2 1606 0
 1879 00d2 3F02     		lsls	r7, r7, #8
 1880              	.LVL237:
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_POSITION_DR_MT - 4U)) | ((Month & 0x0FU) << RTC_POSITION_DR_MU))
 1881              		.loc 2 1605 0
 1882 00d4 0F43     		orrs	r7, r1
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_POSITION_DR_YT - 4U)) | ((Year & 0x0FU) << RTC_POSITION_DR_YU))  
 1883              		.loc 2 1604 0
 1884 00d6 3E43     		orrs	r6, r7
 1885              	.LVL238:
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rtc.h **** }
 1886              		.loc 2 1609 0
ARM GAS  /tmp/ccnIlCuV.s 			page 116


 1887 00d8 6768     		ldr	r7, [r4, #4]
 1888 00da 0449     		ldr	r1, .L84
 1889 00dc 0F40     		ands	r7, r1
 1890 00de 3E43     		orrs	r6, r7
 1891              	.LVL239:
 1892 00e0 6660     		str	r6, [r4, #4]
 1893 00e2 B7E7     		b	.L81
 1894              	.LVL240:
 1895              	.L83:
 1896              	.LBE237:
 1897              	.LBE236:
 440:./Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_rtc.c ****     }
 1898              		.loc 1 440 0
 1899 00e4 2000     		movs	r0, r4
 1900 00e6 FFF7FEFF 		bl	LL_RTC_WaitForSynchro
 1901              	.LVL241:
 1902 00ea BBE7     		b	.L79
 1903              	.L85:
 1904              		.align	2
 1905              	.L84:
 1906 00ec C00000FF 		.word	-16777024
 1907 00f0 00280040 		.word	1073752064
 1908              		.cfi_endproc
 1909              	.LFE263:
 1911              		.text
 1912              	.Letext0:
 1913              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1914              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1915              		.file 6 "Drivers/CMSIS/Include/core_cm0plus.h"
 1916              		.file 7 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 1917              		.file 8 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l073xx.h"
 1918              		.file 9 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 1919              		.file 10 "/usr/arm-none-eabi/include/sys/lock.h"
 1920              		.file 11 "/usr/arm-none-eabi/include/sys/_types.h"
 1921              		.file 12 "/usr/lib/gcc/arm-none-eabi/7.2.0/include/stddef.h"
 1922              		.file 13 "/usr/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/ccnIlCuV.s 			page 117


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_ll_rtc.c
     /tmp/ccnIlCuV.s:16     .text.LL_RTC_StructInit:0000000000000000 $t
     /tmp/ccnIlCuV.s:23     .text.LL_RTC_StructInit:0000000000000000 LL_RTC_StructInit
     /tmp/ccnIlCuV.s:48     .text.LL_RTC_TIME_StructInit:0000000000000000 $t
     /tmp/ccnIlCuV.s:55     .text.LL_RTC_TIME_StructInit:0000000000000000 LL_RTC_TIME_StructInit
     /tmp/ccnIlCuV.s:79     .text.LL_RTC_DATE_StructInit:0000000000000000 $t
     /tmp/ccnIlCuV.s:86     .text.LL_RTC_DATE_StructInit:0000000000000000 LL_RTC_DATE_StructInit
     /tmp/ccnIlCuV.s:113    .text.LL_RTC_ALMA_Init:0000000000000000 $t
     /tmp/ccnIlCuV.s:120    .text.LL_RTC_ALMA_Init:0000000000000000 LL_RTC_ALMA_Init
     /tmp/ccnIlCuV.s:440    .text.LL_RTC_ALMA_Init:0000000000000144 $d
     /tmp/ccnIlCuV.s:451    .text.LL_RTC_ALMB_Init:0000000000000000 $t
     /tmp/ccnIlCuV.s:458    .text.LL_RTC_ALMB_Init:0000000000000000 LL_RTC_ALMB_Init
     /tmp/ccnIlCuV.s:780    .text.LL_RTC_ALMB_Init:0000000000000148 $d
     /tmp/ccnIlCuV.s:792    .text.LL_RTC_ALMA_StructInit:0000000000000000 $t
     /tmp/ccnIlCuV.s:799    .text.LL_RTC_ALMA_StructInit:0000000000000000 LL_RTC_ALMA_StructInit
     /tmp/ccnIlCuV.s:830    .text.LL_RTC_ALMB_StructInit:0000000000000000 $t
     /tmp/ccnIlCuV.s:837    .text.LL_RTC_ALMB_StructInit:0000000000000000 LL_RTC_ALMB_StructInit
     /tmp/ccnIlCuV.s:868    .text.LL_RTC_EnterInitMode:0000000000000000 $t
     /tmp/ccnIlCuV.s:875    .text.LL_RTC_EnterInitMode:0000000000000000 LL_RTC_EnterInitMode
     /tmp/ccnIlCuV.s:985    .text.LL_RTC_EnterInitMode:0000000000000054 $d
     /tmp/ccnIlCuV.s:990    .text.LL_RTC_Init:0000000000000000 $t
     /tmp/ccnIlCuV.s:997    .text.LL_RTC_Init:0000000000000000 LL_RTC_Init
     /tmp/ccnIlCuV.s:1100   .text.LL_RTC_Init:000000000000004c $d
     /tmp/ccnIlCuV.s:1105   .text.LL_RTC_ExitInitMode:0000000000000000 $t
     /tmp/ccnIlCuV.s:1112   .text.LL_RTC_ExitInitMode:0000000000000000 LL_RTC_ExitInitMode
     /tmp/ccnIlCuV.s:1138   .text.LL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/ccnIlCuV.s:1145   .text.LL_RTC_WaitForSynchro:0000000000000000 LL_RTC_WaitForSynchro
     /tmp/ccnIlCuV.s:1308   .text.LL_RTC_WaitForSynchro:0000000000000094 $d
     /tmp/ccnIlCuV.s:1313   .text.LL_RTC_DeInit:0000000000000000 $t
     /tmp/ccnIlCuV.s:1320   .text.LL_RTC_DeInit:0000000000000000 LL_RTC_DeInit
     /tmp/ccnIlCuV.s:1409   .text.LL_RTC_DeInit:000000000000004c $d
     /tmp/ccnIlCuV.s:1416   .text.LL_RTC_TIME_Init:0000000000000000 $t
     /tmp/ccnIlCuV.s:1423   .text.LL_RTC_TIME_Init:0000000000000000 LL_RTC_TIME_Init
     /tmp/ccnIlCuV.s:1665   .text.LL_RTC_TIME_Init:00000000000000ec $d
     /tmp/ccnIlCuV.s:1671   .text.LL_RTC_DATE_Init:0000000000000000 $t
     /tmp/ccnIlCuV.s:1678   .text.LL_RTC_DATE_Init:0000000000000000 LL_RTC_DATE_Init
     /tmp/ccnIlCuV.s:1906   .text.LL_RTC_DATE_Init:00000000000000ec $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
__aeabi_uidivmod
